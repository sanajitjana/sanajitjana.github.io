/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-teal-500: oklch(70.4% 0.14 182.503);
    --color-cyan-500: oklch(71.5% 0.143 215.221);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-purple-500: oklch(62.7% 0.265 303.9);
    --color-pink-500: oklch(65.6% 0.241 354.308);
    --color-rose-500: oklch(64.5% 0.246 16.439);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-2xl: 42rem;
    --container-4xl: 56rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-9xl: 8rem;
    --text-9xl--line-height: 1;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-tight: -0.025em;
    --leading-tight: 1.25;
    --leading-snug: 1.375;
    --leading-relaxed: 1.625;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --blur-sm: 8px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-primary: var(--color-primary);
    --color-primary-foreground: var(--color-primary-foreground);
    --color-secondary: var(--color-secondary);
    --color-secondary-foreground: var(--color-secondary-foreground);
    --color-accent: var(--color-accent);
    --color-accent-foreground: var(--color-accent-foreground);
    --color-background: var(--color-background);
    --color-foreground: var(--color-foreground);
    --color-muted: var(--color-muted);
    --color-muted-foreground: var(--color-muted-foreground);
    --color-border: var(--color-border);
    --color-card: var(--color-card);
    --color-card-foreground: var(--color-card-foreground);
    --color-popover: var(--color-popover);
    --color-popover-foreground: var(--color-popover-foreground);
    --color-note: var(--color-note);
    --color-tip: var(--color-tip);
    --color-important: var(--color-important);
    --color-warning: var(--color-warning);
    --color-caution: var(--color-caution);
    --reading-progress-bg: var(--color-border);
    @supports (color: color-mix(in lab, red, red)) {
      --reading-progress-bg: color-mix(
    in srgb,
    var(--color-border) 30%,
    transparent
  );
    }
    --reading-progress-shadow: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      --reading-progress-shadow: color-mix(
    in srgb,
    var(--color-primary) 30%,
    transparent
  );
    }
    --reading-progress-height: 3px;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-auto {
    pointer-events: auto;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .collapse {
    visibility: collapse;
  }
  .visible {
    visibility: visible;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-4 {
    inset: calc(var(--spacing) * 4);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-8 {
    top: calc(var(--spacing) * 8);
  }
  .top-12 {
    top: calc(var(--spacing) * 12);
  }
  .top-\[15\%\] {
    top: 15%;
  }
  .top-\[20\%\] {
    top: 20%;
  }
  .top-\[25\%\] {
    top: 25%;
  }
  .top-\[30\%\] {
    top: 30%;
  }
  .top-\[35\%\] {
    top: 35%;
  }
  .top-\[40\%\] {
    top: 40%;
  }
  .top-\[45\%\] {
    top: 45%;
  }
  .top-\[50\%\] {
    top: 50%;
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-8 {
    right: calc(var(--spacing) * 8);
  }
  .right-\[15\%\] {
    right: 15%;
  }
  .right-\[20\%\] {
    right: 20%;
  }
  .right-\[25\%\] {
    right: 25%;
  }
  .right-\[30\%\] {
    right: 30%;
  }
  .right-\[35\%\] {
    right: 35%;
  }
  .right-\[40\%\] {
    right: 40%;
  }
  .right-\[45\%\] {
    right: 45%;
  }
  .right-\[50\%\] {
    right: 50%;
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-4 {
    bottom: calc(var(--spacing) * 4);
  }
  .bottom-8 {
    bottom: calc(var(--spacing) * 8);
  }
  .bottom-\[15\%\] {
    bottom: 15%;
  }
  .bottom-\[20\%\] {
    bottom: 20%;
  }
  .bottom-\[25\%\] {
    bottom: 25%;
  }
  .bottom-\[30\%\] {
    bottom: 30%;
  }
  .bottom-\[35\%\] {
    bottom: 35%;
  }
  .bottom-\[40\%\] {
    bottom: 40%;
  }
  .bottom-\[45\%\] {
    bottom: 45%;
  }
  .bottom-\[50\%\] {
    bottom: 50%;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .left-2 {
    left: calc(var(--spacing) * 2);
  }
  .left-4 {
    left: calc(var(--spacing) * 4);
  }
  .left-8 {
    left: calc(var(--spacing) * 8);
  }
  .left-\[15\%\] {
    left: 15%;
  }
  .left-\[20\%\] {
    left: 20%;
  }
  .left-\[25\%\] {
    left: 25%;
  }
  .left-\[30\%\] {
    left: 30%;
  }
  .left-\[35\%\] {
    left: 35%;
  }
  .left-\[40\%\] {
    left: 40%;
  }
  .left-\[45\%\] {
    left: 45%;
  }
  .left-\[50\%\] {
    left: 50%;
  }
  .z-10 {
    z-index: 10;
  }
  .z-40 {
    z-index: 40;
  }
  .z-50 {
    z-index: 50;
  }
  .z-\[60\] {
    z-index: 60;
  }
  .z-\[9998\] {
    z-index: 9998;
  }
  .z-\[9999\] {
    z-index: 9999;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-8 {
    margin-inline: calc(var(--spacing) * 8);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-6 {
    margin-block: calc(var(--spacing) * 6);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-auto {
    margin-top: auto;
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-3 {
    margin-right: calc(var(--spacing) * 3);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .ml-12 {
    margin-left: calc(var(--spacing) * 12);
  }
  .line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
  .line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
  .line-clamp-3 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .aspect-\[2\/1\] {
    aspect-ratio: 2/1;
  }
  .aspect-\[16\/9\] {
    aspect-ratio: 16/9;
  }
  .h-0 {
    height: calc(var(--spacing) * 0);
  }
  .h-0\.5 {
    height: calc(var(--spacing) * 0.5);
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .h-1\.5 {
    height: calc(var(--spacing) * 1.5);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-64 {
    height: calc(var(--spacing) * 64);
  }
  .h-96 {
    height: calc(var(--spacing) * 96);
  }
  .h-full {
    height: 100%;
  }
  .max-h-96 {
    max-height: calc(var(--spacing) * 96);
  }
  .max-h-\[80vh\] {
    max-height: 80vh;
  }
  .min-h-\[60vh\] {
    min-height: 60vh;
  }
  .min-h-\[120px\] {
    min-height: 120px;
  }
  .min-h-\[140px\] {
    min-height: 140px;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-0 {
    width: calc(var(--spacing) * 0);
  }
  .w-0\.5 {
    width: calc(var(--spacing) * 0.5);
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-1\.5 {
    width: calc(var(--spacing) * 1.5);
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-24 {
    width: calc(var(--spacing) * 24);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-44 {
    width: calc(var(--spacing) * 44);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-auto {
    width: auto;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-px {
    width: 1px;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-\[3rem\] {
    max-width: 3rem;
  }
  .max-w-\[4rem\] {
    max-width: 4rem;
  }
  .max-w-\[6rem\] {
    max-width: 6rem;
  }
  .max-w-\[8rem\] {
    max-width: 8rem;
  }
  .max-w-\[calc\(100vw-2rem\)\] {
    max-width: calc(100vw - 2rem);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-none {
    max-width: none;
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-fit {
    min-width: fit-content;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-shrink-0 {
    flex-shrink: 0;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-0 {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-24 {
    --tw-translate-y: calc(var(--spacing) * 24);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-100 {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .-rotate-15 {
    rotate: calc(15deg * -1);
  }
  .-rotate-30 {
    rotate: calc(30deg * -1);
  }
  .-rotate-45 {
    rotate: calc(45deg * -1);
  }
  .rotate-0 {
    rotate: 0deg;
  }
  .rotate-12 {
    rotate: 12deg;
  }
  .rotate-30 {
    rotate: 30deg;
  }
  .rotate-36 {
    rotate: 36deg;
  }
  .rotate-45 {
    rotate: 45deg;
  }
  .rotate-60 {
    rotate: 60deg;
  }
  .rotate-72 {
    rotate: 72deg;
  }
  .rotate-108 {
    rotate: 108deg;
  }
  .rotate-144 {
    rotate: 144deg;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-0\.5 {
    gap: calc(var(--spacing) * 0.5);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-x-1 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-3 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-border {
    :where(& > :not(:last-child)) {
      border-color: var(--color-border);
    }
  }
  .self-center {
    align-self: center;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-r-lg {
    border-top-right-radius: var(--radius-lg);
    border-bottom-right-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-r-\[5px\] {
    border-right-style: var(--tw-border-style);
    border-right-width: 5px;
  }
  .border-r-\[6px\] {
    border-right-style: var(--tw-border-style);
    border-right-width: 6px;
  }
  .border-r-\[7px\] {
    border-right-style: var(--tw-border-style);
    border-right-width: 7px;
  }
  .border-r-\[8px\] {
    border-right-style: var(--tw-border-style);
    border-right-width: 8px;
  }
  .border-r-\[10px\] {
    border-right-style: var(--tw-border-style);
    border-right-width: 10px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-\[8px\] {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 8px;
  }
  .border-b-\[10px\] {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 10px;
  }
  .border-b-\[11px\] {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 11px;
  }
  .border-b-\[12px\] {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 12px;
  }
  .border-b-\[16px\] {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 16px;
  }
  .border-l-4 {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
  }
  .border-l-\[5px\] {
    border-left-style: var(--tw-border-style);
    border-left-width: 5px;
  }
  .border-l-\[6px\] {
    border-left-style: var(--tw-border-style);
    border-left-width: 6px;
  }
  .border-l-\[7px\] {
    border-left-style: var(--tw-border-style);
    border-left-width: 7px;
  }
  .border-l-\[8px\] {
    border-left-style: var(--tw-border-style);
    border-left-width: 8px;
  }
  .border-l-\[10px\] {
    border-left-style: var(--tw-border-style);
    border-left-width: 10px;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-background {
    border-color: var(--color-background);
  }
  .border-border {
    border-color: var(--color-border);
  }
  .border-border\/50 {
    border-color: var(--color-border);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-border) 50%, transparent);
    }
  }
  .border-current {
    border-color: currentcolor;
  }
  .border-muted\/30 {
    border-color: var(--color-muted);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-muted) 30%, transparent);
    }
  }
  .border-primary {
    border-color: var(--color-primary);
  }
  .border-primary\/20 {
    border-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
    }
  }
  .border-white\/30 {
    border-color: color-mix(in srgb, #fff 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
  .border-white\/50 {
    border-color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .border-white\/60 {
    border-color: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .border-white\/65 {
    border-color: color-mix(in srgb, #fff 65%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 65%, transparent);
    }
  }
  .border-white\/70 {
    border-color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .border-white\/80 {
    border-color: color-mix(in srgb, #fff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }
  .border-t-transparent {
    border-top-color: transparent;
  }
  .border-r-transparent {
    border-right-color: transparent;
  }
  .border-b-white\/50 {
    border-bottom-color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .border-b-white\/60 {
    border-bottom-color: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom-color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .border-b-white\/65 {
    border-bottom-color: color-mix(in srgb, #fff 65%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom-color: color-mix(in oklab, var(--color-white) 65%, transparent);
    }
  }
  .border-b-white\/70 {
    border-bottom-color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom-color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .border-b-white\/80 {
    border-bottom-color: color-mix(in srgb, #fff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom-color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }
  .border-l-transparent {
    border-left-color: transparent;
  }
  .bg-accent {
    background-color: var(--color-accent);
  }
  .bg-background {
    background-color: var(--color-background);
  }
  .bg-black\/50 {
    background-color: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .bg-border {
    background-color: var(--color-border);
  }
  .bg-card {
    background-color: var(--color-card);
  }
  .bg-card\/80 {
    background-color: var(--color-card);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-card) 80%, transparent);
    }
  }
  .bg-muted {
    background-color: var(--color-muted);
  }
  .bg-muted\/20 {
    background-color: var(--color-muted);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-muted) 20%, transparent);
    }
  }
  .bg-muted\/30 {
    background-color: var(--color-muted);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-muted) 30%, transparent);
    }
  }
  .bg-muted\/50 {
    background-color: var(--color-muted);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-muted) 50%, transparent);
    }
  }
  .bg-popover\/95 {
    background-color: var(--color-popover);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-popover) 95%, transparent);
    }
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-primary\/10 {
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
    }
  }
  .bg-primary\/20 {
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
    }
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white\/8 {
    background-color: color-mix(in srgb, #fff 8%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 8%, transparent);
    }
  }
  .bg-white\/10 {
    background-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .bg-white\/12 {
    background-color: color-mix(in srgb, #fff 12%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 12%, transparent);
    }
  }
  .bg-white\/13 {
    background-color: color-mix(in srgb, #fff 13%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 13%, transparent);
    }
  }
  .bg-white\/15 {
    background-color: color-mix(in srgb, #fff 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 15%, transparent);
    }
  }
  .bg-white\/20 {
    background-color: color-mix(in srgb, #fff 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .bg-white\/25 {
    background-color: color-mix(in srgb, #fff 25%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 25%, transparent);
    }
  }
  .bg-white\/30 {
    background-color: color-mix(in srgb, #fff 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
  .bg-white\/35 {
    background-color: color-mix(in srgb, #fff 35%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 35%, transparent);
    }
  }
  .bg-white\/40 {
    background-color: color-mix(in srgb, #fff 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 40%, transparent);
    }
  }
  .bg-white\/45 {
    background-color: color-mix(in srgb, #fff 45%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 45%, transparent);
    }
  }
  .bg-white\/50 {
    background-color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .bg-white\/60 {
    background-color: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .bg-white\/65 {
    background-color: color-mix(in srgb, #fff 65%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 65%, transparent);
    }
  }
  .bg-white\/70 {
    background-color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .bg-white\/80 {
    background-color: color-mix(in srgb, #fff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }
  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-l {
    --tw-gradient-position: to left in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-blue-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(62.3% 0.214 259.815) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-cyan-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(71.5% 0.143 215.221) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-cyan-500) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-green-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(72.3% 0.219 149.579) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-green-500) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-indigo-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(58.5% 0.233 277.117) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-indigo-500) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-muted-foreground\/20 {
    --tw-gradient-from: var(--color-muted-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-muted-foreground) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-orange-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(70.5% 0.213 47.604) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-orange-500) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-pink-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(65.6% 0.241 354.308) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-pink-500) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-primary {
    --tw-gradient-from: var(--color-primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-primary\/5 {
    --tw-gradient-from: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-primary) 5%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-purple-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(62.7% 0.265 303.9) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-teal-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(70.4% 0.14 182.503) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-teal-500) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-transparent {
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-transparent {
    --tw-gradient-via: transparent;
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-blue-500\/10 {
    --tw-gradient-to: color-mix(in srgb, oklch(62.3% 0.214 259.815) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-500) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-card\/90 {
    --tw-gradient-to: var(--color-card);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-card) 90%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-green-500\/10 {
    --tw-gradient-to: color-mix(in srgb, oklch(72.3% 0.219 149.579) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-green-500) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-pink-500\/10 {
    --tw-gradient-to: color-mix(in srgb, oklch(65.6% 0.241 354.308) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-pink-500) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-primary\/80 {
    --tw-gradient-to: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-primary) 80%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-purple-500\/10 {
    --tw-gradient-to: color-mix(in srgb, oklch(62.7% 0.265 303.9) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-500) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-red-500\/10 {
    --tw-gradient-to: color-mix(in srgb, oklch(63.7% 0.237 25.331) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-red-500) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-rose-500\/10 {
    --tw-gradient-to: color-mix(in srgb, oklch(64.5% 0.246 16.439) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-rose-500) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .object-cover {
    object-fit: cover;
  }
  .p-0\.5 {
    padding: calc(var(--spacing) * 0.5);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }
  .pl-6 {
    padding-left: calc(var(--spacing) * 6);
  }
  .pl-8 {
    padding-left: calc(var(--spacing) * 8);
  }
  .text-center {
    text-align: center;
  }
  .text-right {
    text-align: right;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-9xl {
    font-size: var(--text-9xl);
    line-height: var(--tw-leading, var(--text-9xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }
  .leading-snug {
    --tw-leading: var(--leading-snug);
    line-height: var(--leading-snug);
  }
  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .break-all {
    word-break: break-all;
  }
  .hyphens-auto {
    -webkit-hyphens: auto;
    hyphens: auto;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-accent-foreground {
    color: var(--color-accent-foreground);
  }
  .text-foreground {
    color: var(--color-foreground);
  }
  .text-foreground\/90 {
    color: var(--color-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-foreground) 90%, transparent);
    }
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-muted-foreground {
    color: var(--color-muted-foreground);
  }
  .text-muted-foreground\/50 {
    color: var(--color-muted-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-muted-foreground) 50%, transparent);
    }
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-primary-foreground {
    color: var(--color-primary-foreground);
  }
  .text-white {
    color: var(--color-white);
  }
  .italic {
    font-style: italic;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-20 {
    opacity: 20%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .group-hover\:scale-105 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:text-primary {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  .group-hover\:opacity-90 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 90%;
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .placeholder\:text-muted-foreground {
    &::placeholder {
      color: var(--color-muted-foreground);
    }
  }
  .hover\:translate-x-1 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:-translate-y-0\.5 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -0.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:-translate-y-1 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:scale-105 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-110 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-\[1\.02\] {
    &:hover {
      @media (hover: hover) {
        scale: 1.02;
      }
    }
  }
  .hover\:border-primary\/20 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
        }
      }
    }
  }
  .hover\:border-primary\/30 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
        }
      }
    }
  }
  .hover\:border-primary\/50 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-primary) 50%, transparent);
        }
      }
    }
  }
  .hover\:bg-accent {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-accent);
      }
    }
  }
  .hover\:bg-accent\/50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-accent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-accent) 50%, transparent);
        }
      }
    }
  }
  .hover\:bg-muted\/40 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-muted);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-muted) 40%, transparent);
        }
      }
    }
  }
  .hover\:bg-muted\/50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-muted);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-muted) 50%, transparent);
        }
      }
    }
  }
  .hover\:bg-primary\/5 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary) 5%, transparent);
        }
      }
    }
  }
  .hover\:bg-primary\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-primary\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-primary\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary) 90%, transparent);
        }
      }
    }
  }
  .hover\:text-accent-foreground {
    &:hover {
      @media (hover: hover) {
        color: var(--color-accent-foreground);
      }
    }
  }
  .hover\:text-foreground {
    &:hover {
      @media (hover: hover) {
        color: var(--color-foreground);
      }
    }
  }
  .hover\:text-primary {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  .hover\:text-primary\/80 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-primary) 80%, transparent);
        }
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:shadow-lg {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-md {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .focus\:bg-accent {
    &:focus {
      background-color: var(--color-accent);
    }
  }
  .focus\:text-accent-foreground {
    &:focus {
      color: var(--color-accent-foreground);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-primary\/20 {
    &:focus {
      --tw-ring-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
      }
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .active\:scale-95 {
    &:active {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .sm\:inset-auto {
    @media (width >= 40rem) {
      inset: auto;
    }
  }
  .sm\:top-1\/2 {
    @media (width >= 40rem) {
      top: calc(1/2 * 100%);
    }
  }
  .sm\:right-0 {
    @media (width >= 40rem) {
      right: calc(var(--spacing) * 0);
    }
  }
  .sm\:left-0 {
    @media (width >= 40rem) {
      left: calc(var(--spacing) * 0);
    }
  }
  .sm\:left-1\/2 {
    @media (width >= 40rem) {
      left: calc(1/2 * 100%);
    }
  }
  .sm\:mx-2 {
    @media (width >= 40rem) {
      margin-inline: calc(var(--spacing) * 2);
    }
  }
  .sm\:mx-auto {
    @media (width >= 40rem) {
      margin-inline: auto;
    }
  }
  .sm\:block {
    @media (width >= 40rem) {
      display: block;
    }
  }
  .sm\:inline {
    @media (width >= 40rem) {
      display: inline;
    }
  }
  .sm\:w-full {
    @media (width >= 40rem) {
      width: 100%;
    }
  }
  .sm\:max-w-md {
    @media (width >= 40rem) {
      max-width: var(--container-md);
    }
  }
  .sm\:-translate-x-1\/2 {
    @media (width >= 40rem) {
      --tw-translate-x: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .sm\:translate-x-0 {
    @media (width >= 40rem) {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .sm\:-translate-y-1\/2 {
    @media (width >= 40rem) {
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:px-3 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 3);
    }
  }
  .sm\:px-4 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .sm\:py-2 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  .sm\:py-3 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 3);
    }
  }
  .md\:mb-6 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 6);
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:inline {
    @media (width >= 48rem) {
      display: inline;
    }
  }
  .md\:h-80 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 80);
    }
  }
  .md\:h-\[500px\] {
    @media (width >= 48rem) {
      height: 500px;
    }
  }
  .md\:max-w-\[12rem\] {
    @media (width >= 48rem) {
      max-width: 12rem;
    }
  }
  .md\:max-w-\[16rem\] {
    @media (width >= 48rem) {
      max-width: 16rem;
    }
  }
  .md\:max-w-none {
    @media (width >= 48rem) {
      max-width: none;
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:items-start {
    @media (width >= 48rem) {
      align-items: flex-start;
    }
  }
  .md\:justify-start {
    @media (width >= 48rem) {
      justify-content: flex-start;
    }
  }
  .md\:gap-1 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 1);
    }
  }
  .md\:gap-2 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 2);
    }
  }
  .md\:gap-4 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .md\:space-x-2 {
    @media (width >= 48rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .md\:px-3 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 3);
    }
  }
  .md\:py-1\.5 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 1.5);
    }
  }
  .md\:pr-\[21rem\] {
    @media (width >= 48rem) {
      padding-right: 21rem;
    }
  }
  .md\:text-left {
    @media (width >= 48rem) {
      text-align: left;
    }
  }
  .md\:text-4xl {
    @media (width >= 48rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .md\:text-5xl {
    @media (width >= 48rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .lg\:h-\[600px\] {
    @media (width >= 64rem) {
      height: 600px;
    }
  }
  .lg\:max-w-none {
    @media (width >= 64rem) {
      max-width: none;
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
}
@layer theme {
  :root {
    --color-primary: oklch(0.205 0 0);
    --color-primary-foreground: oklch(0.985 0 0);
    --color-secondary: oklch(0.97 0 0);
    --color-secondary-foreground: oklch(0.205 0 0);
    --color-accent: oklch(0.97 0 0);
    --color-accent-foreground: oklch(0.205 0 0);
    --color-background: oklch(1 0 0);
    --color-foreground: oklch(0.145 0 0);
    --color-muted: oklch(0.97 0 0);
    --color-muted-foreground: oklch(0.556 0 0);
    --color-border: oklch(0.922 0 0);
    --color-card: oklch(1 0 0);
    --color-card-foreground: oklch(0.145 0 0);
    --color-popover: oklch(1 0 0);
    --color-popover-foreground: oklch(0.145 0 0);
    --color-note: oklch(0.61 0.15 252.5);
    --color-tip: oklch(0.61 0.15 162.48);
    --color-important: oklch(0.61 0.15 282.5);
    --color-warning: oklch(0.61 0.15 82.5);
    --color-caution: oklch(0.61 0.15 12.57);
  }
  .dark {
    --color-primary: oklch(0.922 0 0);
    --color-primary-foreground: oklch(0.205 0 0);
    --color-secondary: oklch(0.269 0 0);
    --color-secondary-foreground: oklch(0.985 0 0);
    --color-accent: oklch(0.371 0 0);
    --color-accent-foreground: oklch(0.985 0 0);
    --color-background: oklch(0.145 0 0);
    --color-foreground: oklch(0.985 0 0);
    --color-muted: oklch(0.269 0 0);
    --color-muted-foreground: oklch(0.708 0 0);
    --color-border: oklch(1 0 0 / 10%);
    --color-card: oklch(0.205 0 0);
    --color-card-foreground: oklch(0.985 0 0);
    --color-popover: oklch(0.269 0 0);
    --color-popover-foreground: oklch(0.985 0 0);
    --color-note: oklch(0.67 0.15 252.5);
    --color-tip: oklch(0.67 0.15 162.48);
    --color-important: oklch(0.67 0.15 282.5);
    --color-warning: oklch(0.67 0.15 82.5);
    --color-caution: oklch(0.67 0.15 12.57);
  }
  [data-theme="claude"] {
    --color-primary: oklch(0.62 0.14 39.04);
    --color-primary-foreground: oklch(1 0 0);
    --color-secondary: oklch(0.92 0.01 92.99);
    --color-secondary: oklch(0.92 0.01 92.99);
    --color-secondary-foreground: oklch(0.43 0.02 98.6);
    --color-accent: oklch(0.92 0.01 92.99);
    --color-accent-foreground: oklch(0.27 0.02 98.94);
    --color-background: oklch(0.98 0.01 95.1);
    --color-foreground: oklch(0.34 0.03 95.72);
    --color-muted: oklch(0.93 0.02 90.24);
    --color-muted-foreground: oklch(0.61 0.01 97.42);
    --color-border: oklch(0.88 0.01 97.36);
    --color-card: oklch(0.98 0.01 95.1);
    --color-card-foreground: oklch(0.19 0 106.59);
    --color-popover: oklch(1 0 0);
    --color-popover-foreground: oklch(0.27 0.02 98.94);
    --color-note: oklch(0.55 0.12 220);
    --color-tip: oklch(0.55 0.12 150);
    --color-important: oklch(0.55 0.12 280);
    --color-warning: oklch(0.55 0.12 80);
    --color-caution: oklch(0.55 0.12 15);
  }
  [data-theme="claude"].dark {
    --color-primary: oklch(0.67 0.13 38.76);
    --color-primary-foreground: oklch(1 0 0);
    --color-secondary: oklch(0.98 0.01 95.1);
    --color-secondary-foreground: oklch(0.31 0 106.6);
    --color-accent: oklch(0.21 0.01 95.42);
    --color-accent-foreground: oklch(0.97 0.01 98.88);
    --color-background: oklch(0.27 0 106.64);
    --color-foreground: oklch(0.81 0.01 93.01);
    --color-muted: oklch(0.22 0 106.71);
    --color-muted-foreground: oklch(0.77 0.02 99.07);
    --color-border: oklch(0.36 0.01 106.89);
    --color-card: oklch(0.27 0 106.64);
    --color-card-foreground: oklch(0.98 0.01 95.1);
    --color-popover: oklch(0.31 0 106.6);
    --color-popover-foreground: oklch(0.92 0 106.48);
    --color-note: oklch(0.70 0.14 220);
    --color-tip: oklch(0.70 0.14 150);
    --color-important: oklch(0.70 0.14 280);
    --color-warning: oklch(0.70 0.14 80);
    --color-caution: oklch(0.70 0.14 15);
  }
  [data-theme="bumblebee"] {
    --color-primary: oklch(0.85 0.199 91.936);
    --color-primary-foreground: oklch(0.42 0.095 57.708);
    --color-secondary: oklch(0.75 0.183 55.934);
    --color-secondary-foreground: oklch(0.40 0.123 38.172);
    --color-accent: oklch(0 0 0);
    --color-accent-foreground: oklch(1 0 0);
    --color-background: oklch(1 0 0);
    --color-foreground: oklch(0.20 0 0);
    --color-muted: oklch(0.97 0 0);
    --color-muted-foreground: oklch(0.37 0.01 67.558);
    --color-border: oklch(0.92 0 0);
    --color-card: oklch(1 0 0);
    --color-card-foreground: oklch(0.20 0 0);
    --color-popover: oklch(1 0 0);
    --color-popover-foreground: oklch(0.20 0 0);
    --color-note: oklch(0.65 0.15 220);
    --color-tip: oklch(0.65 0.15 150);
    --color-important: oklch(0.65 0.15 280);
    --color-warning: oklch(0.65 0.15 80);
    --color-caution: oklch(0.65 0.15 15);
  }
  [data-theme="bumblebee"].dark {
    --color-primary: oklch(0.70 0.16 91.936);
    --color-primary-foreground: oklch(0.95 0 0);
    --color-secondary: oklch(0.45 0.15 55.934);
    --color-secondary-foreground: oklch(0.95 0 0);
    --color-accent: oklch(0.15 0 0);
    --color-accent-foreground: oklch(0.95 0 0);
    --color-background: oklch(0.12 0 0);
    --color-foreground: oklch(0.92 0.003 48.717);
    --color-muted: oklch(0.18 0 0);
    --color-muted-foreground: oklch(0.65 0.01 67.558);
    --color-border: oklch(0.25 0 0);
    --color-card: oklch(0.15 0 0);
    --color-card-foreground: oklch(0.92 0.003 48.717);
    --color-popover: oklch(0.18 0 0);
    --color-popover-foreground: oklch(0.92 0.003 48.717);
    --color-note: oklch(0.75 0.18 220);
    --color-tip: oklch(0.75 0.18 150);
    --color-important: oklch(0.75 0.18 280);
    --color-warning: oklch(0.75 0.18 80);
    --color-caution: oklch(0.75 0.18 15);
  }
  [data-theme="emerald"] {
    --color-primary: oklch(0.767 0.135 153.45);
    --color-primary-foreground: oklch(0.334 0.04 162.24);
    --color-secondary: oklch(0.613 0.202 261.294);
    --color-secondary-foreground: oklch(1 0 0);
    --color-accent: oklch(0.728 0.149 33.2);
    --color-accent-foreground: oklch(0 0 0);
    --color-background: oklch(1 0 0);
    --color-foreground: oklch(0.355 0.032 262.988);
    --color-muted: oklch(0.93 0 0);
    --color-muted-foreground: oklch(0.355 0.032 262.988);
    --color-border: oklch(0.86 0 0);
    --color-card: oklch(1 0 0);
    --color-card-foreground: oklch(0.355 0.032 262.988);
    --color-popover: oklch(1 0 0);
    --color-popover-foreground: oklch(0.355 0.032 262.988);
    --color-note: oklch(0.60 0.12 220);
    --color-tip: oklch(0.60 0.12 150);
    --color-important: oklch(0.60 0.12 280);
    --color-warning: oklch(0.60 0.12 80);
    --color-caution: oklch(0.60 0.12 15);
  }
  [data-theme="emerald"].dark {
    --color-primary: oklch(0.65 0.12 153.45);
    --color-primary-foreground: oklch(0.95 0 0);
    --color-secondary: oklch(0.45 0.16 261.294);
    --color-secondary-foreground: oklch(0.95 0 0);
    --color-accent: oklch(0.55 0.12 33.2);
    --color-accent-foreground: oklch(0.95 0 0);
    --color-background: oklch(0.12 0 0);
    --color-foreground: oklch(0.985 0.001 247.838);
    --color-muted: oklch(0.18 0 0);
    --color-muted-foreground: oklch(0.65 0.02 262.988);
    --color-border: oklch(0.25 0 0);
    --color-card: oklch(0.15 0 0);
    --color-card-foreground: oklch(0.985 0.001 247.838);
    --color-popover: oklch(0.18 0 0);
    --color-popover-foreground: oklch(0.985 0.001 247.838);
    --color-note: oklch(0.75 0.14 220);
    --color-tip: oklch(0.75 0.14 150);
    --color-important: oklch(0.75 0.14 280);
    --color-warning: oklch(0.75 0.14 80);
    --color-caution: oklch(0.75 0.14 15);
  }
  [data-theme="nord"] {
    --color-primary: oklch(0.594 0.077 254.027);
    --color-primary-foreground: oklch(0.119 0.015 254.027);
    --color-secondary: oklch(0.697 0.059 248.687);
    --color-secondary-foreground: oklch(0.139 0.011 248.687);
    --color-accent: oklch(0.775 0.062 217.469);
    --color-accent-foreground: oklch(0.155 0.012 217.469);
    --color-background: oklch(0.951 0.007 260.731);
    --color-foreground: oklch(0.324 0.022 264.182);
    --color-muted: oklch(0.933 0.01 261.788);
    --color-muted-foreground: oklch(0.452 0.035 264.131);
    --color-border: oklch(0.899 0.016 262.749);
    --color-card: oklch(0.951 0.007 260.731);
    --color-card-foreground: oklch(0.324 0.022 264.182);
    --color-popover: oklch(0.951 0.007 260.731);
    --color-popover-foreground: oklch(0.324 0.022 264.182);
    --color-note: oklch(0.55 0.08 220);
    --color-tip: oklch(0.55 0.08 150);
    --color-important: oklch(0.55 0.08 280);
    --color-warning: oklch(0.55 0.08 80);
    --color-caution: oklch(0.55 0.08 15);
  }
  [data-theme="nord"].dark {
    --color-primary: oklch(0.55 0.07 254.027);
    --color-primary-foreground: oklch(0.95 0 0);
    --color-secondary: oklch(0.55 0.05 248.687);
    --color-secondary-foreground: oklch(0.95 0 0);
    --color-accent: oklch(0.65 0.05 217.469);
    --color-accent-foreground: oklch(0.95 0 0);
    --color-background: oklch(0.18 0.015 264.182);
    --color-foreground: oklch(0.899 0.016 262.749);
    --color-muted: oklch(0.25 0.02 264.131);
    --color-muted-foreground: oklch(0.70 0.035 264.131);
    --color-border: oklch(0.35 0.025 264.182);
    --color-card: oklch(0.22 0.018 264.182);
    --color-card-foreground: oklch(0.899 0.016 262.749);
    --color-popover: oklch(0.25 0.02 264.131);
    --color-popover-foreground: oklch(0.899 0.016 262.749);
    --color-note: oklch(0.65 0.10 220);
    --color-tip: oklch(0.65 0.10 150);
    --color-important: oklch(0.65 0.10 280);
    --color-warning: oklch(0.65 0.10 80);
    --color-caution: oklch(0.65 0.10 15);
  }
  [data-theme="sunset"] {
    --color-primary: oklch(0.7357 0.1641 34.7091);
    --color-primary-foreground: oklch(1.0000 0 0);
    --color-secondary: oklch(0.9596 0.0200 28.9029);
    --color-secondary-foreground: oklch(0.5587 0.1294 32.7364);
    --color-accent: oklch(0.8278 0.1131 57.9984);
    --color-accent-foreground: oklch(0.3353 0.0132 2.7676);
    --color-background: oklch(0.9856 0.0084 56.3169);
    --color-foreground: oklch(0.3353 0.0132 2.7676);
    --color-muted: oklch(0.9656 0.0176 39.4009);
    --color-muted-foreground: oklch(0.5534 0.0116 58.0708);
    --color-border: oklch(0.9296 0.0370 38.6868);
    --color-card: oklch(1.0000 0 0);
    --color-card-foreground: oklch(0.3353 0.0132 2.7676);
    --color-popover: oklch(1.0000 0 0);
    --color-popover-foreground: oklch(0.3353 0.0132 2.7676);
    --color-note: oklch(0.60 0.14 220);
    --color-tip: oklch(0.60 0.14 150);
    --color-important: oklch(0.60 0.14 280);
    --color-warning: oklch(0.60 0.14 80);
    --color-caution: oklch(0.60 0.14 15);
  }
  [data-theme="sunset"].dark {
    --color-primary: oklch(0.7357 0.1641 34.7091);
    --color-primary-foreground: oklch(1.0000 0 0);
    --color-secondary: oklch(0.3637 0.0203 342.2664);
    --color-secondary-foreground: oklch(0.9397 0.0119 51.3156);
    --color-accent: oklch(0.8278 0.1131 57.9984);
    --color-accent-foreground: oklch(0.2569 0.0169 352.4042);
    --color-background: oklch(0.2569 0.0169 352.4042);
    --color-foreground: oklch(0.9397 0.0119 51.3156);
    --color-muted: oklch(0.3184 0.0176 341.4465);
    --color-muted-foreground: oklch(0.8378 0.0237 52.6346);
    --color-border: oklch(0.3637 0.0203 342.2664);
    --color-card: oklch(0.3184 0.0176 341.4465);
    --color-card-foreground: oklch(0.9397 0.0119 51.3156);
    --color-popover: oklch(0.3184 0.0176 341.4465);
    --color-popover-foreground: oklch(0.9397 0.0119 51.3156);
    --color-note: oklch(0.72 0.16 220);
    --color-tip: oklch(0.72 0.16 150);
    --color-important: oklch(0.72 0.16 280);
    --color-warning: oklch(0.72 0.16 80);
    --color-caution: oklch(0.72 0.16 15);
  }
  [data-theme="abyss"] {
    --color-primary: oklch(0.75 0.20 125);
    --color-primary-foreground: oklch(0.15 0.15 125);
    --color-secondary: oklch(0.70 0.12 298.3);
    --color-secondary-foreground: oklch(0.20 0.08 298.3);
    --color-accent: oklch(0.65 0.15 209);
    --color-accent-foreground: oklch(0.98 0 0);
    --color-background: oklch(0.96 0.02 209);
    --color-foreground: oklch(0.25 0.08 209);
    --color-muted: oklch(0.92 0.03 209);
    --color-muted-foreground: oklch(0.45 0.06 209);
    --color-border: oklch(0.85 0.04 209);
    --color-card: oklch(0.96 0.02 209);
    --color-card-foreground: oklch(0.25 0.08 209);
    --color-popover: oklch(0.98 0.01 209);
    --color-popover-foreground: oklch(0.25 0.08 209);
    --color-note: oklch(0.65 0.16 220);
    --color-tip: oklch(0.65 0.16 150);
    --color-important: oklch(0.65 0.16 280);
    --color-warning: oklch(0.65 0.16 80);
    --color-caution: oklch(0.65 0.16 15);
  }
  [data-theme="abyss"].dark {
    --color-primary: oklch(0.92 0.2653 125);
    --color-primary-foreground: oklch(0.50 0.2653 125);
    --color-secondary: oklch(0.833 0.0764 298.3);
    --color-secondary-foreground: oklch(0.433 0.0764 298.3);
    --color-accent: oklch(0.43 0 0);
    --color-accent-foreground: oklch(0.98 0 0);
    --color-background: oklch(0.20 0.08 209);
    --color-foreground: oklch(0.90 0.076 70.697);
    --color-muted: oklch(0.30 0.08 209);
    --color-muted-foreground: oklch(0.70 0.06 209);
    --color-border: oklch(0.35 0.08 209);
    --color-card: oklch(0.22 0.08 209);
    --color-card-foreground: oklch(0.90 0.076 70.697);
    --color-popover: oklch(0.30 0.08 209);
    --color-popover-foreground: oklch(0.90 0.076 70.697);
    --color-note: oklch(0.78 0.20 220);
    --color-tip: oklch(0.78 0.20 150);
    --color-important: oklch(0.78 0.20 280);
    --color-warning: oklch(0.78 0.20 80);
    --color-caution: oklch(0.78 0.20 15);
  }
  [data-theme="dracula"] {
    --color-primary: oklch(0.70 0.15 346.812);
    --color-primary-foreground: oklch(0.98 0.007 106.545);
    --color-secondary: oklch(0.68 0.12 301.883);
    --color-secondary-foreground: oklch(0.98 0.007 106.545);
    --color-accent: oklch(0.75 0.10 66.558);
    --color-accent-foreground: oklch(0.20 0.024 66.558);
    --color-background: oklch(0.95 0.01 277.508);
    --color-foreground: oklch(0.30 0.022 277.508);
    --color-muted: oklch(0.90 0.015 277.508);
    --color-muted-foreground: oklch(0.50 0.02 277.508);
    --color-border: oklch(0.82 0.02 277.508);
    --color-card: oklch(0.95 0.01 277.508);
    --color-card-foreground: oklch(0.30 0.022 277.508);
    --color-popover: oklch(0.97 0.005 277.508);
    --color-popover-foreground: oklch(0.30 0.022 277.508);
    --color-note: oklch(0.60 0.12 220);
    --color-tip: oklch(0.60 0.12 150);
    --color-important: oklch(0.60 0.12 280);
    --color-warning: oklch(0.60 0.12 80);
    --color-caution: oklch(0.60 0.12 15);
  }
  [data-theme="dracula"].dark {
    --color-primary: oklch(0.755 0.183 346.812);
    --color-primary-foreground: oklch(0.151 0.036 346.812);
    --color-secondary: oklch(0.742 0.148 301.883);
    --color-secondary-foreground: oklch(0.148 0.029 301.883);
    --color-accent: oklch(0.834 0.124 66.558);
    --color-accent-foreground: oklch(0.167 0.024 66.558);
    --color-background: oklch(0.288 0.022 277.508);
    --color-foreground: oklch(0.977 0.007 106.545);
    --color-muted: oklch(0.394 0.032 275.524);
    --color-muted-foreground: oklch(0.879 0.006 275.524);
    --color-border: oklch(0.45 0.035 277.508);
    --color-card: oklch(0.32 0.025 277.508);
    --color-card-foreground: oklch(0.977 0.007 106.545);
    --color-popover: oklch(0.394 0.032 275.524);
    --color-popover-foreground: oklch(0.977 0.007 106.545);
    --color-note: oklch(0.72 0.15 220);
    --color-tip: oklch(0.72 0.15 150);
    --color-important: oklch(0.72 0.15 280);
    --color-warning: oklch(0.72 0.15 80);
    --color-caution: oklch(0.72 0.15 15);
  }
  [data-theme="amethyst"] {
    --color-primary: oklch(0.6104 0.0767 299.7335);
    --color-primary-foreground: oklch(0.9777 0.0041 301.4256);
    --color-secondary: oklch(0.8957 0.0265 300.2416);
    --color-secondary-foreground: oklch(0.3651 0.0325 287.0807);
    --color-accent: oklch(0.7889 0.0802 359.9375);
    --color-accent-foreground: oklch(0.3394 0.0441 1.7583);
    --color-background: oklch(0.9777 0.0041 301.4256);
    --color-foreground: oklch(0.3651 0.0325 287.0807);
    --color-muted: oklch(0.8906 0.0139 299.7754);
    --color-muted-foreground: oklch(0.5288 0.0375 290.7895);
    --color-border: oklch(0.8447 0.0226 300.1421);
    --color-card: oklch(1.0000 0 0);
    --color-card-foreground: oklch(0.3651 0.0325 287.0807);
    --color-popover: oklch(1.0000 0 0);
    --color-popover-foreground: oklch(0.3651 0.0325 287.0807);
    --color-note: oklch(0.55 0.08 220);
    --color-tip: oklch(0.55 0.08 150);
    --color-important: oklch(0.55 0.08 280);
    --color-warning: oklch(0.55 0.08 80);
    --color-caution: oklch(0.55 0.08 15);
  }
  [data-theme="amethyst"].dark {
    --color-primary: oklch(0.7058 0.0777 302.0489);
    --color-primary-foreground: oklch(0.2166 0.0215 292.8474);
    --color-secondary: oklch(0.4604 0.0472 295.5578);
    --color-secondary-foreground: oklch(0.9053 0.0245 293.5570);
    --color-accent: oklch(0.3181 0.0321 308.6149);
    --color-accent-foreground: oklch(0.8391 0.0692 2.6681);
    --color-background: oklch(0.2166 0.0215 292.8474);
    --color-foreground: oklch(0.9053 0.0245 293.5570);
    --color-muted: oklch(0.2560 0.0320 294.8380);
    --color-muted-foreground: oklch(0.6974 0.0282 300.0614);
    --color-border: oklch(0.3063 0.0359 293.3367);
    --color-card: oklch(0.2544 0.0301 292.7315);
    --color-card-foreground: oklch(0.9053 0.0245 293.5570);
    --color-popover: oklch(0.2544 0.0301 292.7315);
    --color-popover-foreground: oklch(0.9053 0.0245 293.5570);
    --color-note: oklch(0.68 0.10 220);
    --color-tip: oklch(0.68 0.10 150);
    --color-important: oklch(0.68 0.10 280);
    --color-warning: oklch(0.68 0.10 80);
    --color-caution: oklch(0.68 0.10 15);
  }
  [data-theme="slate"] {
    --color-primary: oklch(0.5854 0.2041 277.1173);
    --color-primary-foreground: oklch(1.0000 0 0);
    --color-secondary: oklch(0.9276 0.0058 264.5313);
    --color-secondary-foreground: oklch(0.3729 0.0306 259.7328);
    --color-accent: oklch(0.9299 0.0334 272.7879);
    --color-accent-foreground: oklch(0.3729 0.0306 259.7328);
    --color-background: oklch(0.9842 0.0034 247.8575);
    --color-foreground: oklch(0.2795 0.0368 260.0310);
    --color-muted: oklch(0.9670 0.0029 264.5419);
    --color-muted-foreground: oklch(0.5510 0.0234 264.3637);
    --color-border: oklch(0.8717 0.0093 258.3382);
    --color-card: oklch(1.0000 0 0);
    --color-card-foreground: oklch(0.2795 0.0368 260.0310);
    --color-popover: oklch(1.0000 0 0);
    --color-popover-foreground: oklch(0.2795 0.0368 260.0310);
    --color-note: oklch(0.55 0.16 220);
    --color-tip: oklch(0.55 0.16 150);
    --color-important: oklch(0.55 0.16 280);
    --color-warning: oklch(0.55 0.16 80);
    --color-caution: oklch(0.55 0.16 15);
  }
  [data-theme="slate"].dark {
    --color-primary: oklch(0.6801 0.1583 276.9349);
    --color-primary-foreground: oklch(0.2077 0.0398 265.7549);
    --color-secondary: oklch(0.3351 0.0331 260.9120);
    --color-secondary-foreground: oklch(0.8717 0.0093 258.3382);
    --color-accent: oklch(0.3729 0.0306 259.7328);
    --color-accent-foreground: oklch(0.8717 0.0093 258.3382);
    --color-background: oklch(0.2077 0.0398 265.7549);
    --color-foreground: oklch(0.9288 0.0126 255.5078);
    --color-muted: oklch(0.2795 0.0368 260.0310);
    --color-muted-foreground: oklch(0.7137 0.0192 261.3246);
    --color-border: oklch(0.4461 0.0263 256.8018);
    --color-card: oklch(0.2795 0.0368 260.0310);
    --color-card-foreground: oklch(0.9288 0.0126 255.5078);
    --color-popover: oklch(0.2795 0.0368 260.0310);
    --color-popover-foreground: oklch(0.9288 0.0126 255.5078);
    --color-note: oklch(0.70 0.20 220);
    --color-tip: oklch(0.70 0.20 150);
    --color-important: oklch(0.70 0.20 280);
    --color-warning: oklch(0.70 0.20 80);
    --color-caution: oklch(0.70 0.20 15);
  }
  [data-theme="twitter"] {
    --color-primary: oklch(0.6723 0.1606 244.9955);
    --color-primary-foreground: oklch(1.0000 0 0);
    --color-secondary: oklch(0.1884 0.0128 248.5103);
    --color-secondary-foreground: oklch(1.0000 0 0);
    --color-accent: oklch(0.9392 0.0166 250.8453);
    --color-accent-foreground: oklch(0.6723 0.1606 244.9955);
    --color-background: oklch(1.0000 0 0);
    --color-foreground: oklch(0.1884 0.0128 248.5103);
    --color-muted: oklch(0.9222 0.0013 286.3737);
    --color-muted-foreground: oklch(0.1884 0.0128 248.5103);
    --color-border: oklch(0.9317 0.0118 231.6594);
    --color-card: oklch(0.9784 0.0011 197.1387);
    --color-card-foreground: oklch(0.1884 0.0128 248.5103);
    --color-popover: oklch(1.0000 0 0);
    --color-popover-foreground: oklch(0.1884 0.0128 248.5103);
    --color-note: oklch(0.58 0.14 220);
    --color-tip: oklch(0.58 0.14 150);
    --color-important: oklch(0.58 0.14 280);
    --color-warning: oklch(0.58 0.14 80);
    --color-caution: oklch(0.58 0.14 15);
  }
  [data-theme="twitter"].dark {
    --color-primary: oklch(0.6692 0.1607 245.0110);
    --color-primary-foreground: oklch(1.0000 0 0);
    --color-secondary: oklch(0.9622 0.0035 219.5331);
    --color-secondary-foreground: oklch(0.1884 0.0128 248.5103);
    --color-accent: oklch(0.1928 0.0331 242.5459);
    --color-accent-foreground: oklch(0.6692 0.1607 245.0110);
    --color-background: oklch(0 0 0);
    --color-foreground: oklch(0.9328 0.0025 228.7857);
    --color-muted: oklch(0.2090 0 0);
    --color-muted-foreground: oklch(0.5637 0.0078 247.9662);
    --color-border: oklch(0.2674 0.0047 248.0045);
    --color-card: oklch(0.2097 0.0080 274.5332);
    --color-card-foreground: oklch(0.8853 0 0);
    --color-popover: oklch(0 0 0);
    --color-popover-foreground: oklch(0.9328 0.0025 228.7857);
    --color-note: oklch(0.72 0.16 220);
    --color-tip: oklch(0.72 0.16 150);
    --color-important: oklch(0.72 0.16 280);
    --color-warning: oklch(0.72 0.16 80);
    --color-caution: oklch(0.72 0.16 15);
  }
}
@layer base {
  ::-webkit-scrollbar {
    width: 6px;
  }
  ::-webkit-scrollbar-button {
    display: none;
  }
  ::-webkit-scrollbar-track {
    background: transparent;
  }
  ::-webkit-scrollbar-track-piece {
    background: transparent;
  }
  ::-webkit-scrollbar-thumb {
    background-color: var(--color-border);
    border-radius: 3px;
    transition: background-color 0.2s ease;
  }
  ::-webkit-scrollbar-thumb:hover {
    background-color: var(--color-muted-foreground);
  }
  .prose {
    --tw-prose-body: var(--color-foreground);
    --tw-prose-headings: var(--color-foreground);
    --tw-prose-lead: var(--color-muted-foreground);
    --tw-prose-links: var(--color-primary);
    --tw-prose-bold: var(--color-foreground);
    --tw-prose-counters: var(--color-muted-foreground);
    --tw-prose-bullets: var(--color-muted-foreground);
    --tw-prose-hr: var(--color-border);
    --tw-prose-quotes: var(--color-foreground);
    --tw-prose-quote-borders: var(--color-border);
    --tw-prose-captions: var(--color-muted-foreground);
    --tw-prose-code: var(--color-foreground);
    --tw-prose-pre-code: var(--color-muted-foreground);
    --tw-prose-pre-bg: var(--color-muted);
    --tw-prose-th-borders: var(--color-border);
    --tw-prose-td-borders: var(--color-border);
    font-family: ui-sans-serif, system-ui, sans-serif;
    line-height: 1.7;
    font-size: 1rem;
    max-width: none;
  }
  .prose h1 {
    scroll-margin: calc(var(--spacing) * 20);
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
    @media (width >= 64rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: var(--tw-prose-headings);
    position: relative;
  }
  .prose h1::after {
    content: "";
    position: absolute;
    bottom: -0.5rem;
    left: 0;
    width: 3rem;
    height: 3px;
    background: linear-gradient(90deg, var(--color-primary), transparent);
    border-radius: 2px;
  }
  .prose h2 {
    scroll-margin: calc(var(--spacing) * 20);
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: var(--tw-prose-headings);
    position: relative;
    padding-left: 1rem;
  }
  .prose h2::before {
    content: "";
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 4px;
    height: 1.5rem;
    background: var(--color-primary);
    border-radius: 2px;
  }
  .prose h3 {
    scroll-margin: calc(var(--spacing) * 20);
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
    color: var(--tw-prose-headings);
  }
  .prose h4 {
    scroll-margin: calc(var(--spacing) * 20);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
    color: var(--tw-prose-headings);
  }
  .prose h4[id^="alert-"] {
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
  }
  .prose h5 {
    scroll-margin: calc(var(--spacing) * 20);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
    margin-top: 1.25rem;
    margin-bottom: 0.5rem;
    color: var(--tw-prose-headings);
  }
  .prose h6 {
    scroll-margin: calc(var(--spacing) * 20);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
    margin-top: 1rem;
    margin-bottom: 0.5rem;
    color: var(--tw-prose-headings);
  }
  .prose p {
    --tw-leading: calc(var(--spacing) * 7);
    line-height: calc(var(--spacing) * 7);
    margin-top: 1.25rem;
    margin-bottom: 1.25rem;
    color: var(--tw-prose-body);
  }
  .prose p:first-child {
    margin-top: 0;
  }
  .prose p:last-child {
    margin-bottom: 0;
  }
  .prose blockquote {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
    padding-left: calc(var(--spacing) * 6);
    font-style: italic;
    border-left-color: var(--color-primary);
    background: var(--color-muted);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--color-muted) 30%, transparent);
    }
    margin: 1.5rem 0;
    padding: 1rem 1.5rem;
    border-radius: 0.75rem;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    position: relative;
  }
  .prose blockquote::before {
    content: '"';
    font-size: 4rem;
    color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in srgb, var(--color-primary) 20%, transparent);
    }
    position: absolute;
    top: -0.5rem;
    left: 1rem;
    font-family: serif;
    line-height: 1;
  }
  .prose blockquote p {
    margin: 0;
    font-style: italic;
    font-size: 1.1rem;
    color: var(--tw-prose-quotes);
  }
  .prose blockquote blockquote {
    margin: 1rem 0;
    border-left-color: var(--color-accent);
    background: var(--color-accent);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--color-accent) 10%, transparent);
    }
  }
  .prose blockquote blockquote::before {
    color: var(--color-accent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in srgb, var(--color-accent) 20%, transparent);
    }
  }
  .prose .footnote-ref {
    color: var(--color-primary);
    text-decoration: none;
    font-weight: 600;
    font-size: 0.875rem;
    vertical-align: super;
    line-height: 1;
    position: relative;
    padding: 1px 3px;
    margin: -1px -3px;
    border-radius: 3px;
    transition: all 0.3s ease;
  }
  .prose .footnote-ref::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--color-primary) 20%, transparent);
    }
    border-radius: 3px;
    opacity: 0;
    transform: scale(0.9);
    transition: all 0.3s ease;
    z-index: -1;
  }
  .prose .footnote-ref:hover {
    color: var(--color-primary);
    transform: translateY(-1px);
  }
  .prose .footnote-ref:hover::after {
    opacity: 1;
    transform: scale(1);
  }
  .prose .footnotes {
    margin-top: 3rem;
    padding-top: 1.5rem;
    border-top: 1px solid var(--color-border);
    font-size: 0.875rem;
  }
  .prose .footnotes ol {
    padding-left: 1rem;
  }
  .prose .footnotes li {
    margin: 0.5rem 0;
  }
  .prose .footnote-backref {
    color: var(--color-primary);
    text-decoration: none;
    margin-left: 0.5rem;
    position: relative;
    padding: 1px 3px;
    margin: -1px -3px;
    border-radius: 3px;
    transition: all 0.3s ease;
    font-weight: 500;
    vertical-align: baseline;
  }
  .prose .footnote-backref::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--color-primary) 15%, transparent);
    }
    border-radius: 3px;
    opacity: 0;
    transform: scale(0.95);
    transition: all 0.3s ease;
    z-index: -1;
  }
  .prose .footnote-backref:hover {
    color: var(--color-primary);
  }
  .prose .footnote-backref:hover::after {
    opacity: 1;
    transform: scale(1);
  }
  .prose a {
    color: var(--tw-prose-links);
    text-decoration: none;
    font-weight: 500;
    position: relative;
    transition: all 0.3s ease;
    padding: 2px 4px;
    margin: -2px -4px;
    border-radius: 4px;
    background: transparent;
  }
  .prose a:not(.footnote-ref):not(.footnote-backref)::before {
    content: "";
    position: absolute;
    bottom: 1px;
    left: 0;
    width: 100%;
    height: 1px;
    background: var(--tw-prose-links);
    transition: width 0.3s ease;
    transform-origin: right;
  }
  .prose a::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--color-primary) 15%, transparent);
    }
    border-radius: 4px;
    opacity: 0;
    transform: scale(0.95);
    transition: all 0.3s ease;
    z-index: -1;
  }
  .prose a:hover {
    color: var(--color-primary);
  }
  .prose a:hover::after {
    opacity: 1;
    transform: scale(1);
  }
  .prose a:not(.footnote-ref):not(.footnote-backref):hover::before {
    width: 0;
  }
  .prose ul {
    list-style: none;
    padding-left: 0;
    margin: 1.25rem 0;
  }
  .prose ul li {
    position: relative;
    padding-left: 1rem;
    margin: 0.5rem 0.6rem;
    color: var(--tw-prose-body);
  }
  .prose ul li::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0.65em;
    width: 6px;
    height: 6px;
    background: var(--color-primary);
    border-radius: 50%;
  }
  .prose ol {
    counter-reset: item;
    padding-left: 0;
    margin: 1.25rem 0;
    list-style: none;
  }
  .prose ol li {
    position: relative;
    padding-left: 2rem;
    margin: 0.5rem 0.6rem;
    counter-increment: item;
    color: var(--tw-prose-body);
  }
  .prose ol li::before {
    content: counter(item);
    position: absolute;
    left: 0;
    top: 0.35em;
    background: var(--color-primary);
    color: white;
    width: 1.25rem;
    height: 1.25rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.75rem;
    font-weight: bold;
    line-height: 1;
  }
  .prose ul li.task-list-item {
    list-style: none;
    position: relative;
    padding-left: 2rem;
    margin: 0.5rem 0;
  }
  .prose ul li.task-list-item::before {
    display: none;
  }
  .prose ul li.task-list-item input[type="checkbox"] {
    position: absolute;
    left: 0;
    top: 0.4em;
    width: 1rem;
    height: 1rem;
    margin: 0;
    cursor: pointer;
    appearance: none;
    -webkit-appearance: none;
    border: 2px solid var(--color-border);
    border-radius: 0.25rem;
    background: var(--color-background);
    transition: all 0.2s ease;
  }
  .prose ul li.task-list-item input[type="checkbox"]:checked {
    background: var(--color-primary);
    border-color: var(--color-primary);
  }
  .prose ul li.task-list-item input[type="checkbox"]:checked::after {
    content: "✓";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 0.75rem;
    font-weight: bold;
  }
  .prose ul li.task-list-item input[type="checkbox"]:hover {
    border-color: var(--color-primary);
    box-shadow: 0 0 0 2px var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 0 0 2px color-mix(in srgb, var(--color-primary) 20%, transparent);
    }
  }
  .prose dl {
    margin: 1.5rem 0;
  }
  .prose dt {
    font-weight: 600;
    color: var(--tw-prose-headings);
    margin-top: 1rem;
    margin-bottom: 0.5rem;
    position: relative;
    padding-left: 1rem;
  }
  .prose dt::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0.65rem;
    width: 4px;
    height: 4px;
    background: var(--color-primary);
    border-radius: 50%;
  }
  .prose dd {
    margin-left: 1.5rem;
    margin-bottom: 0.75rem;
    color: var(--tw-prose-body);
    padding-left: 1rem;
    border-left: 2px solid var(--color-border);
    @supports (color: color-mix(in lab, red, red)) {
      border-left: 2px solid color-mix(in srgb, var(--color-border) 50%, transparent);
    }
  }
  .prose ul ul, .prose ol ol, .prose ul ol, .prose ol ul {
    margin: 0.5rem 0;
    padding-left: 1.5rem;
  }
  .prose ul ul li::before {
    width: 6px;
    height: 6px;
    background: transparent;
    border: 2px solid var(--color-accent);
    border-radius: 50%;
    border-color: var(--color-primary);
    top: 0.65em;
  }
  .prose ul ul ul li::before {
    content: "";
    width: 4px;
    height: 4px;
    background: var(--color-accent);
    border: none;
    border-radius: 0;
    top: 0.75em;
  }
  .prose ol ol li::before {
    background: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--color-primary) 70%, white 30%);
    }
    font-size: 0.7rem;
    width: 1.1rem;
    height: 1.1rem;
    top: 0.45em;
  }
  .prose ol ol ol li::before {
    background: var(--color-muted-foreground);
    font-size: 0.65rem;
    width: 1rem;
    height: 1rem;
    top: 0.55em;
  }
  .prose code {
    border-radius: 0.25rem;
    background-color: var(--color-muted);
    padding-inline: calc(var(--spacing) * 1.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-family: var(--font-mono);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--tw-prose-code);
    font-weight: 600;
  }
  .code-block-container {
    margin: 1.5rem 0;
  }
  .code-block-content .chroma {
    overflow-x: auto;
    padding: calc(var(--spacing) * 4);
    font-family: var(--font-mono);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    margin: 0;
    border: none;
    border-radius: 0;
    background: transparent !important;
  }
  .code-block-content .chroma pre {
    margin: 0;
    padding: 0;
    background: transparent;
    border: none;
    overflow: visible;
  }
  .code-block-content .chroma code {
    background-color: transparent;
    padding: calc(var(--spacing) * 0);
    font-weight: normal;
    font-family: inherit;
    background: transparent;
  }
  .code-block-content .chroma .ln {
    user-select: none;
    margin-right: 0.4em;
    padding: 0 0.4em 0 0.4em;
    color: var(--chroma-ln, #7f7f7f);
  }
  .code-block-content .chroma .line {
    display: flex;
  }
  .code-block-content .chroma .cl {
    flex: 1;
  }
  .collapse-overlay {
    cursor: pointer;
    transition: opacity 0.3s ease;
  }
  .collapse-overlay:hover {
    backdrop-filter: blur(1px);
  }
  .collapse-overlay > div {
    transition: transform 0.2s ease;
  }
  .collapse-overlay:hover > div {
    transform: translateX(-50%) scale(1.05);
  }
  .code-block-content {
    transition: max-height 0.3s ease-out;
  }
  .prose code:not(.chroma code) {
    border-radius: 0.25rem;
    background-color: var(--color-muted);
    padding-inline: calc(var(--spacing) * 1.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-family: var(--font-mono);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--tw-prose-code);
    font-weight: 600;
  }
  .prose pre:not(.chroma) {
    overflow-x: auto;
    padding: calc(var(--spacing) * 4);
    background: transparent;
    margin: 0;
    position: relative;
  }
  .prose pre:not(.chroma) code {
    background-color: transparent;
    padding: calc(var(--spacing) * 0);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--tw-prose-pre-code);
    font-weight: normal;
  }
  .prose table {
    width: 100%;
    border-collapse: collapse;
    margin: 1.5rem 0;
    border-radius: 0.5rem;
    overflow: hidden;
    border: 1px solid var(--color-border);
    box-shadow: 0 1px 3px 0 var(--color-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 1px 3px 0 color-mix(in srgb, var(--color-foreground) 10%, transparent);
    }
  }
  .prose th {
    background-color: var(--color-muted);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 3);
    text-align: left;
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--tw-prose-headings);
    border-bottom: 1px solid var(--tw-prose-th-borders);
    background: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--color-primary) 5%, var(--color-muted));
    }
  }
  .prose td {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 3);
    border-bottom-color: var(--tw-prose-td-borders);
    color: var(--tw-prose-body);
  }
  .prose tr:last-child td {
    border-bottom: none;
  }
  .prose tr:hover td {
    background: var(--color-muted);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--color-muted) 50%, transparent);
    }
  }
  .prose hr {
    margin-block: calc(var(--spacing) * 8);
    height: 1px;
    border-style: var(--tw-border-style);
    border-width: 0px;
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    --tw-gradient-via: var(--color-border);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .prose img {
    margin-inline: auto;
    border-radius: var(--radius-lg);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    margin: 0 auto;
    max-width: 100%;
    height: auto;
  }
  .prose figure {
    margin: 2rem 0;
  }
  .prose figcaption {
    margin-top: calc(var(--spacing) * 2);
    text-align: center;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--tw-prose-captions);
    font-style: italic;
  }
  .prose strong {
    color: var(--tw-prose-bold);
    font-weight: 600;
  }
  .prose em {
    font-style: italic;
    color: var(--tw-prose-body);
  }
  .prose del, .prose s {
    text-decoration: line-through;
    color: var(--color-muted-foreground);
    opacity: 0.8;
  }
  .prose mark {
    background: linear-gradient( 135deg, var(--color-primary), var(--color-accent) );
    @supports (color: color-mix(in lab, red, red)) {
      background: linear-gradient( 135deg, color-mix(in srgb, var(--color-primary) 20%, transparent), color-mix(in srgb, var(--color-accent) 20%, transparent) );
    }
    color: var(--tw-prose-body);
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-weight: 500;
  }
  .prose sup {
    font-size: 0.75rem;
    line-height: 1;
    vertical-align: super;
    color: var(--color-primary);
    font-weight: 500;
  }
  .prose sub {
    font-size: 0.75rem;
    line-height: 1;
    vertical-align: sub;
    color: var(--color-primary);
    font-weight: 500;
  }
  .prose kbd {
    display: inline-flex;
    align-items: center;
    border-radius: 0.25rem;
    border-style: var(--tw-border-style);
    border-width: 1px;
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
    font-family: var(--font-mono);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    background: var(--color-muted);
    color: var(--tw-prose-body);
    border-color: var(--color-border);
    box-shadow: 0 1px 2px var(--color-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 1px 2px color-mix(in srgb, var(--color-foreground) 10%, transparent);
    }
    min-height: 1.5rem;
  }
  .prose abbr {
    text-decoration: underline;
    text-decoration-style: dotted;
    text-decoration-color: var(--color-primary);
    cursor: help;
  }
  .prose details {
    margin: 1.5rem 0;
    border: 1px solid var(--color-border);
    border-radius: 0.5rem;
    overflow: hidden;
    background: var(--color-card);
  }
  .prose details summary {
    padding: 1rem 1.5rem;
    background: var(--color-muted);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--color-muted) 50%, transparent);
    }
    cursor: pointer;
    font-weight: 600;
    color: var(--tw-prose-headings);
    border-bottom: 1px solid var(--color-border);
    transition: all 0.2s ease;
    position: relative;
    user-select: none;
  }
  .prose details summary:hover {
    background: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix( in srgb, var(--color-primary) 10%, var(--color-muted) );
    }
    color: var(--color-primary);
  }
  .prose details summary::marker {
    content: none;
  }
  .prose details summary::before {
    content: "▶";
    position: absolute;
    right: 1.5rem;
    top: 50%;
    transform: translateY(-50%);
    transition: transform 0.2s ease;
    color: var(--color-primary);
    font-size: 0.875rem;
  }
  .prose details[open] summary::before {
    transform: translateY(-50%) rotate(90deg);
  }
  .prose details[open] summary {
    border-bottom-color: var(--color-border);
  }
  .prose details > *:not(summary) {
    padding: 1rem 1.5rem 0;
    margin: 0;
  }
  .prose details > *:last-child {
    padding-bottom: 1.5rem;
  }
  .code-block-container {
    background: var(--color-card);
  }
  .code-block-content {
    background: var(--color-muted);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--color-muted) 30%, transparent);
    }
  }
  .code-block-content .chroma {
    background-color: transparent !important;
  }
  .dark .code-block-content {
    background: var(--color-muted);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--color-muted) 50%, transparent);
    }
  }
  @media (max-width: 640px) {
    .prose {
      font-size: 0.9rem;
    }
    .prose h1 {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
    .prose h2 {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
    .prose h3 {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .katex-display {
    overflow-x: auto;
    overflow-y: hidden;
    max-width: 100%;
    padding: 1em 0;
  }
}
@layer components {
  .mobile-menu.dropdown-menu {
    max-width: calc(100vw - 2rem);
    min-width: 20rem;
  }
  @media (max-width: 480px) {
    .mobile-menu.dropdown-menu {
      min-width: 18rem;
      max-width: calc(100vw - 1rem);
    }
  }
  .dropdown-menu {
    min-width: 10rem;
    max-height: 20rem;
    overflow-y: auto;
  }
  .search-result-selected {
    background-color: var(--color-primary) !important;
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix( in srgb, var(--color-primary) 10%, transparent ) !important;
    }
    color: var(--color-primary) !important;
  }
  .scrollbar-hide {
    scrollbar-width: none;
    -ms-overflow-style: none;
  }
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .reading-progress-container {
    height: var(--reading-progress-height);
  }
  .reading-progress-bg {
    height: var(--reading-progress-height);
    background-color: var(--reading-progress-bg);
  }
  .reading-progress-bar {
    height: var(--reading-progress-height);
    box-shadow: 0 0 8px var(--reading-progress-shadow);
  }
  @media (max-width: 480px) {
    #dock span {
      display: none;
    }
  }
  #dock[data-dock-mode="float"] {
    transition: all 0.2s ease-out;
  }
  #dock[data-dock-mode="float"].translate-y-0 ~ #dock-float-trigger .bg-gradient-to-t {
    height: 12px;
  }
  #dock[data-dock-mode="float"].translate-y-0 ~ #dock-float-trigger #dock-float-icon {
    transform: rotate(180deg);
    transition: transform 0.2s ease-out;
  }
  @media (max-width: 640px) {
    #dock[data-dock-mode="float"] {
      left: 1rem;
      right: 1rem;
      transform: translateX(0) translateY(24px);
    }
    #dock[data-dock-mode="float"].translate-y-0 {
      transform: translateX(0) translateY(0);
    }
    #dock[data-dock-mode="float"].translate-y-24 {
      transform: translateX(0) translateY(24px);
    }
  }
  #toc-content nav {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-leading: calc(var(--spacing) * 6);
    line-height: calc(var(--spacing) * 6);
  }
  #toc-content ul {
    margin: calc(var(--spacing) * 0);
    list-style-type: none;
    padding: calc(var(--spacing) * 0);
  }
  #toc-content li {
    margin-block: calc(var(--spacing) * 1);
    padding: calc(var(--spacing) * 0);
  }
  #toc-content a {
    position: relative;
    display: block;
    border-radius: var(--radius-lg);
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
    border-color: transparent;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 3);
    color: var(--color-muted-foreground);
    text-decoration-line: none;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
    &:hover {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 0.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: -1px;
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
    &:hover {
      @media (hover: hover) {
        scale: 1.02;
      }
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  #toc-content a.active, #toc-content li.active > a {
    --tw-translate-x: calc(var(--spacing) * 0.5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    --tw-translate-y: -1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    scale: 1.02;
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
    }
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-primary);
  }
  #toc-content ul ul a {
    padding-left: calc(var(--spacing) * 6);
  }
  #toc-content ul ul ul a {
    padding-left: calc(var(--spacing) * 8);
  }
  #toc-content ul ul ul ul a {
    padding-left: calc(var(--spacing) * 10);
  }
  #toc-content ul ul ul ul ul a {
    padding-left: calc(var(--spacing) * 12);
  }
  #toc-content ul ul ul ul ul ul a {
    padding-left: calc(var(--spacing) * 14);
  }
  .fj-gallery .glightbox {
    display: block;
    overflow: hidden;
    text-decoration-line: none;
    &:hover {
      @media (hover: hover) {
        text-decoration-line: none;
      }
    }
    &:focus {
      text-decoration-line: none;
    }
    border-radius: 0.5rem;
  }
  .fj-gallery-item {
    overflow: hidden;
    border-radius: 0.5rem;
  }
  .fj-gallery img {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    border-radius: 0.5rem;
  }
  .fj-gallery img:hover {
    --tw-scale-x: 105%;
    --tw-scale-y: 105%;
    --tw-scale-z: 105%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .single-image .glightbox {
    display: inline-block;
    overflow: hidden;
    text-decoration-line: none;
    &:hover {
      @media (hover: hover) {
        text-decoration-line: none;
      }
    }
    &:focus {
      text-decoration-line: none;
    }
    border-radius: 0.5rem;
  }
  .single-image .image-container {
    overflow: hidden;
    border-radius: 0.5rem;
  }
  .single-image img {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    border-radius: 0.5rem;
  }
  .single-image img:hover {
    --tw-scale-x: 105%;
    --tw-scale-y: 105%;
    --tw-scale-z: 105%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .fj-gallery-item, .single-image .image-container {
    position: relative;
  }
  .link-card {
    margin-bottom: calc(var(--spacing) * 2);
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-border);
    background-color: var(--color-card);
    padding: calc(var(--spacing) * 4);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
    flex: 1 1 calc(33.333% - 1rem);
  }
  .link-card-title {
    margin: calc(var(--spacing) * 0);
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    padding: calc(var(--spacing) * 0);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-foreground);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  .link-card-content {
    margin: calc(var(--spacing) * 0);
    margin-top: calc(var(--spacing) * 1);
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    padding: calc(var(--spacing) * 0);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
    color: var(--color-muted-foreground);
  }
  .link-card-url {
    margin: calc(var(--spacing) * 0);
    margin-top: calc(var(--spacing) * 1);
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    padding: calc(var(--spacing) * 0);
    font-family: var(--font-mono);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--color-muted-foreground);
    opacity: 70%;
  }
  .link-card-arrow {
    flex-shrink: 0;
    color: var(--color-muted-foreground);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  .link-card a::before {
    display: none;
  }
  .link-card a::after {
    display: none;
  }
  .link-card-group {
    display: flex;
    width: 100%;
    flex-wrap: wrap;
    gap: calc(var(--spacing) * 4);
    justify-content: flex-start;
    align-items: stretch;
  }
  .link-card-group .link-card:only-child {
    flex: 0 0 auto;
    margin-inline: auto;
    width: 100%;
    max-width: var(--container-md);
  }
  .link-card-error {
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-muted);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-muted) 20%, transparent);
    }
    background-color: var(--color-muted);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-muted) 10%, transparent);
    }
    padding: calc(var(--spacing) * 4);
    color: var(--color-muted);
    margin-inline: auto;
    width: 100%;
    max-width: var(--container-md);
  }
  .link-card-error p {
    margin-bottom: calc(var(--spacing) * 2);
    &:last-child {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }
  .link-card-error ul {
    list-style-position: inside;
    list-style-type: disc;
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
}
@layer utilities;
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-tracking: initial;
    }
  }
}
