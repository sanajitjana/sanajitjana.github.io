<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sanajit Jana</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Sanajit Jana</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 16 Sep 2025 09:30:00 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>API Design and RESTful Services</title>
      <link>http://localhost:1313/posts/api-design-and-restful-services/</link>
      <pubDate>Tue, 16 Sep 2025 09:30:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/api-design-and-restful-services/</guid>
      <description>&lt;h1 id=&#34;api-design-and-restful-services&#34;&gt;API Design and RESTful Services&lt;/h1&gt;&#xA;&lt;p&gt;Well-designed APIs are the backbone of modern applications. In this post, we&amp;rsquo;ll explore RESTful API design principles and best practices.&lt;/p&gt;&#xA;&lt;h2 id=&#34;rest-principles&#34;&gt;REST Principles&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-stateless&#34;&gt;1. Stateless&lt;/h3&gt;&#xA;&lt;p&gt;Each request contains all information needed to process it. No server-side session state.&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-client-server-architecture&#34;&gt;2. Client-Server Architecture&lt;/h3&gt;&#xA;&lt;p&gt;Clear separation between client and server concerns.&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-cacheable&#34;&gt;3. Cacheable&lt;/h3&gt;&#xA;&lt;p&gt;Responses must define themselves as cacheable or not.&lt;/p&gt;&#xA;&lt;h3 id=&#34;4-uniform-interface&#34;&gt;4. Uniform Interface&lt;/h3&gt;&#xA;&lt;p&gt;Consistent resource identification and manipulation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DevOps and CI/CD Pipeline Implementation</title>
      <link>http://localhost:1313/posts/devops-and-ci/cd-pipeline-implementation/</link>
      <pubDate>Tue, 16 Sep 2025 09:29:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/devops-and-ci/cd-pipeline-implementation/</guid>
      <description>&lt;h1 id=&#34;devops-and-cicd-pipeline-implementation&#34;&gt;DevOps and CI/CD Pipeline Implementation&lt;/h1&gt;&#xA;&lt;p&gt;DevOps practices bridge the gap between development and operations teams. In this post, we&amp;rsquo;ll explore CI/CD pipelines and modern DevOps tools.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-devops&#34;&gt;What is DevOps?&lt;/h2&gt;&#xA;&lt;p&gt;DevOps is a culture, set of practices, and tools that combine software development (Dev) and IT operations (Ops) to shorten the development lifecycle and provide continuous delivery of high-quality software.&lt;/p&gt;&#xA;&lt;h2 id=&#34;cicd-fundamentals&#34;&gt;CI/CD Fundamentals&lt;/h2&gt;&#xA;&lt;h3 id=&#34;continuous-integration-ci&#34;&gt;Continuous Integration (CI)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Automatically build and test code changes&lt;/li&gt;&#xA;&lt;li&gt;Detect integration issues early&lt;/li&gt;&#xA;&lt;li&gt;Maintain code quality standards&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;continuous-delivery-cd&#34;&gt;Continuous Delivery (CD)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Automatically deploy to staging environments&lt;/li&gt;&#xA;&lt;li&gt;Ensure deployments are reliable and repeatable&lt;/li&gt;&#xA;&lt;li&gt;Enable faster release cycles&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;continuous-deployment&#34;&gt;Continuous Deployment&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Automatically deploy to production&lt;/li&gt;&#xA;&lt;li&gt;Requires high confidence in automated testing&lt;/li&gt;&#xA;&lt;li&gt;Enables rapid iteration&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;github-actions-cicd-pipeline&#34;&gt;GitHub Actions CI/CD Pipeline&lt;/h2&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        YAML&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-0&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-0&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-0&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# .github/workflows/ci-cd.yml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CI/CD Pipeline&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;branches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;main, develop ]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;pull_request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;branches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;main ]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;jobs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;strategy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;node-version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16.&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;x, 18.x, 20.x]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;actions/checkout@v4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Use Node.js ${{ matrix.node-version }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;actions/setup-node@v4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;node-version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;${{ matrix.node-version }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;npm&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Install dependencies&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;npm ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Run tests&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;npm test -- --coverage&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Upload coverage to Codecov&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;codecov/codecov-action@v3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;build-and-deploy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;needs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;github.ref == &amp;#39;refs/heads/main&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;actions/checkout@v4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Configure AWS credentials&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;aws-actions/configure-aws-credentials@v4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;aws-access-key-id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;${{ secrets.AWS_ACCESS_KEY_ID }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;aws-secret-access-key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;${{ secrets.AWS_SECRET_ACCESS_KEY }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;aws-region&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;us-east-1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Login to Amazon ECR&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;login-ecr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;aws-actions/amazon-ecr-login@v2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Build and push Docker image&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ECR_REGISTRY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;${{ steps.login-ecr.outputs.registry }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ECR_REPOSITORY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;my-app&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;IMAGE_TAG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;${{ github.sha }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Deploy to ECS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;        aws ecs update-service \&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;          --cluster my-cluster \&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;          --service my-service \&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;          --force-new-deployment \&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;          --region us-east-1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-0&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;jenkins-pipeline&#34;&gt;Jenkins Pipeline&lt;/h2&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        GROOVY&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-1&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-1&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-1&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Jenkinsfile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pipeline&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;agent&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;any&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;environment&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;DOCKER_IMAGE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;my-app&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;DOCKER_TAG&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;${env.BUILD_NUMBER}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;stages&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;stage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Checkout&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;steps&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;checkout&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scm&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;stage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Build&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;steps&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;npm install&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;npm run build&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;stage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Test&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;steps&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;npm test&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;npm run test:e2e&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;always&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;junit&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;test-results/*.xml&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;publishHTML&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;([&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;nl&#34;&gt;allowMissing:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;nl&#34;&gt;alwaysLinkToLastBuild:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;nl&#34;&gt;keepAll:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;nl&#34;&gt;reportDir:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;coverage&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;nl&#34;&gt;reportFiles:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;index.html&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;nl&#34;&gt;reportName:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Coverage Report&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;o&#34;&gt;])&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;stage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Security Scan&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;steps&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;npm audit --audit-level=moderate&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;docker run --rm -v $(pwd):/src owasp/zap2docker-stable zap-baseline.py -t http://my-app:3000 -r zap-report.html&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;stage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Build Docker Image&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;steps&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} .&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${DOCKER_IMAGE}:latest&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;stage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Push to Registry&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;steps&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;withCredentials&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;usernamePassword&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;credentialsId:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;docker-hub&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;usernameVariable:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;DOCKER_USER&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;passwordVariable:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;DOCKER_PASS&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;docker login -u $DOCKER_USER -p $DOCKER_PASS&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;docker push ${DOCKER_IMAGE}:${DOCKER_TAG}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;docker push ${DOCKER_IMAGE}:latest&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;stage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Deploy to Staging&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;steps&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;kubectl set image deployment/my-app my-app=my-app:${DOCKER_TAG} --namespace=staging&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;kubectl rollout status deployment/my-app --namespace=staging&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;stage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Integration Tests&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;steps&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;npm run test:integration&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;stage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Deploy to Production&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;when&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;branch&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;main&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;steps&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;message:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Deploy to Production?&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;ok:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Deploy&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;kubectl set image deployment/my-app my-app=my-app:${DOCKER_TAG} --namespace=production&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;kubectl rollout status deployment/my-app --namespace=production&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;always&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;docker system prune -f&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;cleanWs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;success&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;slackSend&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;color:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;good&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;message:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Build ${env.BUILD_NUMBER} succeeded!&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;failure&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;slackSend&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;color:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;danger&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;message:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Build ${env.BUILD_NUMBER} failed!&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-1&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;infrastructure-as-code-with-terraform&#34;&gt;Infrastructure as Code with Terraform&lt;/h2&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        HCL&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-2&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-2&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-2&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-hcl&#34; data-lang=&#34;hcl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# main.tf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;terraform&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;required_providers&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;    aws&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;      source&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hashicorp/aws&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;      version&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;~&amp;gt; 5.0&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;provider&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;aws&amp;#34;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  region&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;us-east-1&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}&lt;span class=&#34;c1&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# VPC&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;resource&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;aws_vpc&amp;#34; &amp;#34;main&amp;#34;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  cidr_block&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;10.0.0.0/16&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  tags&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;    Name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;main-vpc&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}&lt;span class=&#34;c1&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Subnets&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;resource&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;aws_subnet&amp;#34; &amp;#34;public&amp;#34;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  count&lt;/span&gt;             &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  vpc_id&lt;/span&gt;            &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;aws_vpc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;id&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  cidr_block&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;10.0.${count.index}.0/24&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  availability_zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;aws_availability_zones&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;available&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  tags&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;    Name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;public-subnet-${count.index}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}&lt;span class=&#34;c1&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ECS Cluster&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;resource&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;aws_ecs_cluster&amp;#34; &amp;#34;main&amp;#34;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;my-app-cluster&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;setting&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;    name&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;containerInsights&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;    value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;enabled&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}&lt;span class=&#34;c1&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ECS Task Definition&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;resource&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;aws_ecs_task_definition&amp;#34; &amp;#34;app&amp;#34;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  family&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;my-app&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  network_mode&lt;/span&gt;             &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;awsvpc&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  requires_compatibilities&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;FARGATE&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  cpu&lt;/span&gt;                      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;256&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  memory&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;512&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  container_definitions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;jsonencode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;      name&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;my-app&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;      image&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;${aws_ecr_repository.app.repository_url}:latest&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;      portMappings&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;          containerPort&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;          hostPort&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}&lt;span class=&#34;c1&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ECS Service&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;resource&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;aws_ecs_service&amp;#34; &amp;#34;main&amp;#34;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  name&lt;/span&gt;            &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;my-app-service&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  cluster&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;aws_ecs_cluster&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;id&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  task_definition&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;aws_ecs_task_definition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;arn&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  desired_count&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;network_configuration&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;    subnets&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;aws_subnet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;id&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;    security_groups&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;aws_security_group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;load_balancer&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;    target_group_arn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;aws_lb_target_group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;arn&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;    container_name&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;my-app&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;    container_port&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-2&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;monitoring-and-observability&#34;&gt;Monitoring and Observability&lt;/h2&gt;&#xA;&lt;h3 id=&#34;application-monitoring-with-prometheus-and-grafana&#34;&gt;Application Monitoring with Prometheus and Grafana&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        YAML&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-3&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-3&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-3&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# prometheus.yml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;global&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;scrape_interval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;15s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;scrape_configs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;job_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;my-app&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;static_configs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;targets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;localhost:3000&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metrics_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/metrics&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;job_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;node-exporter&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;static_configs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;targets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;localhost:9100&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-3&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h3 id=&#34;logging-with-elk-stack&#34;&gt;Logging with ELK Stack&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        JAVASCRIPT&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-4&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-4&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-4&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Winston logger configuration&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;winston&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;winston&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;winston&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createLogger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;info&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;winston&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;combine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;winston&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;timestamp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;winston&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;errors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}),&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;winston&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;defaultMeta&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;service&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;my-app&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;transports&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;winston&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;transports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;error.log&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}),&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;winston&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;transports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;combined.log&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}),&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;winston&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;transports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;winston&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;simple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Usage&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Application started&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Database connection failed&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-4&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;security-in-cicd&#34;&gt;Security in CI/CD&lt;/h2&gt;&#xA;&lt;h3 id=&#34;secret-management&#34;&gt;Secret Management&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        YAML&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-5&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-5&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-5&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# GitHub Actions with secrets&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Deploy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;DATABASE_URL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;${{ secrets.DATABASE_URL }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;API_KEY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;${{ secrets.API_KEY }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    echo &amp;#34;Deploying with secure credentials&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-5&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h3 id=&#34;vulnerability-scanning&#34;&gt;Vulnerability Scanning&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        BASH&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-6&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-6&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-6&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Container vulnerability scanning&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run --rm -v /var/run/docker.sock:/var/run/docker.sock &lt;span class=&#34;se&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  aquasec/trivy:latest image my-app:latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Dependency scanning&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm audit --audit-level&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;high&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;safety check&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-6&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;best-practices&#34;&gt;Best Practices&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Infrastructure as Code&lt;/strong&gt;: Treat infrastructure like code&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Immutable Infrastructure&lt;/strong&gt;: Don&amp;rsquo;t modify running systems&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Blue-Green Deployments&lt;/strong&gt;: Zero-downtime deployments&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Feature Flags&lt;/strong&gt;: Enable/disable features without redeployment&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Automated Testing&lt;/strong&gt;: Comprehensive test coverage&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: Real-time monitoring and alerting&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Security Scanning&lt;/strong&gt;: Automated security testing&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: Document all processes and procedures&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;tools-ecosystem&#34;&gt;Tools Ecosystem&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Category&lt;/th&gt;&#xA;          &lt;th&gt;Tools&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;CI/CD&lt;/td&gt;&#xA;          &lt;td&gt;Jenkins, GitHub Actions, GitLab CI, CircleCI&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Container Orchestration&lt;/td&gt;&#xA;          &lt;td&gt;Kubernetes, Docker Swarm, Amazon ECS&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Infrastructure as Code&lt;/td&gt;&#xA;          &lt;td&gt;Terraform, CloudFormation, Ansible&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Monitoring&lt;/td&gt;&#xA;          &lt;td&gt;Prometheus, Grafana, ELK Stack, Datadog&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Security&lt;/td&gt;&#xA;          &lt;td&gt;SonarQube, OWASP ZAP, Trivy, Snyk&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Configuration Management&lt;/td&gt;&#xA;          &lt;td&gt;Ansible, Puppet, Chef&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;DevOps practices enable teams to deliver software faster, more reliably, and with higher quality. The key is to automate as much as possible while maintaining security and observability throughout the entire pipeline.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mobile App Development with React Native</title>
      <link>http://localhost:1313/posts/mobile-app-development-with-react-native/</link>
      <pubDate>Tue, 16 Sep 2025 09:28:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/mobile-app-development-with-react-native/</guid>
      <description>&lt;h1 id=&#34;mobile-app-development-with-react-native&#34;&gt;Mobile App Development with React Native&lt;/h1&gt;&#xA;&lt;p&gt;React Native enables building native mobile apps using JavaScript and React. In this post, we&amp;rsquo;ll explore the fundamentals and best practices for React Native development.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-react-native&#34;&gt;What is React Native?&lt;/h2&gt;&#xA;&lt;p&gt;React Native is a framework for building native mobile applications using JavaScript and React. It allows you to write code once and deploy to both iOS and Android platforms.&lt;/p&gt;&#xA;&lt;h2 id=&#34;setting-up-a-react-native-project&#34;&gt;Setting Up a React Native Project&lt;/h2&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        BASH&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-0&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-0&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-0&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Install React Native CLI&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install -g @react-native-community/cli&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Create new project&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npx react-native init MyApp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Or with Expo (easier setup)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npx create-expo-app MyApp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Start development server&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; MyApp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm start&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-0&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;core-components&#34;&gt;Core Components&lt;/h2&gt;&#xA;&lt;h3 id=&#34;basic-components&#34;&gt;Basic Components&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        JSX&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-1&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-1&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-1&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;StyleSheet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TouchableOpacity&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;App&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;styles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;styles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Welcome&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Native&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;TouchableOpacity&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;styles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;styles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;buttonText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Press&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Me&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;TouchableOpacity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;styles&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;StyleSheet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;justifyContent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;alignItems&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;backgroundColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#f5f5f5&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fontSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fontWeight&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;marginBottom&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;backgroundColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#007AFF&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;borderRadius&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;buttonText&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fontSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fontWeight&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;App&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-1&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h3 id=&#34;state-management-with-hooks&#34;&gt;State Management with Hooks&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        JSX&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-2&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-2&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-2&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useEffect&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TextInput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;FlatList&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TodoApp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setTodos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([]);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;inputText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setInputText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;addTodo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;inputText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;trim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;setTodos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([...&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;inputText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;completed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}]);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;setInputText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;toggleTodo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;setTodos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;completed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;completed&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;TextInput&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;borderWidth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;borderColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#ccc&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;marginBottom&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;borderRadius&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;inputText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;onChangeText&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setInputText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;placeholder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Add a todo...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;onSubmitEditing&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addTodo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;FlatList&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;keyExtractor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;renderItem&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;TouchableOpacity&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;na&#34;&gt;onPress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;toggleTodo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nx&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nx&#34;&gt;marginVertical&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nx&#34;&gt;backgroundColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;completed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#e0e0e0&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#fff&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nx&#34;&gt;borderRadius&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nx&#34;&gt;borderWidth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nx&#34;&gt;borderColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#ddd&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nx&#34;&gt;textDecorationLine&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;completed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;line-through&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nx&#34;&gt;fontSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}}&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;TouchableOpacity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TodoApp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-2&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;navigation&#34;&gt;Navigation&lt;/h2&gt;&#xA;&lt;h3 id=&#34;react-navigation-setup&#34;&gt;React Navigation Setup&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        BASH&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-3&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-3&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-3&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install @react-navigation/native&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install @react-navigation/stack&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install @react-navigation/bottom-tabs&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-3&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        JSX&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-4&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-4&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-4&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;NavigationContainer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;@react-navigation/native&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createStackNavigator&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;@react-navigation/stack&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createBottomTabNavigator&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;@react-navigation/bottom-tabs&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Stack&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createStackNavigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Tab&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createBottomTabNavigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;HomeScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;justifyContent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;alignItems&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Home&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Screen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;TouchableOpacity&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;onPress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;navigate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Details&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;marginTop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;backgroundColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#007AFF&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;white&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Go&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Details&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;TouchableOpacity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DetailsScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;justifyContent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;alignItems&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Details&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Screen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;App&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;NavigationContainer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Stack.Navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Stack.Screen&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Home&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;HomeScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Stack.Screen&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Details&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DetailsScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Stack.Navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;NavigationContainer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;App&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-4&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;api-integration&#34;&gt;API Integration&lt;/h2&gt;&#xA;&lt;h3 id=&#34;fetch-api&#34;&gt;Fetch API&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        JSX&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-5&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-5&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-5&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useEffect&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;FlatList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ActivityIndicator&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;UserList&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setUsers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([]);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;loading&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setLoading&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;useEffect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fetchUsers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fetchUsers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fetch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;https://jsonplaceholder.typicode.com/users&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;setUsers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;setError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;finally&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;setLoading&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;loading&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;justifyContent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;alignItems&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ActivityIndicator&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;large&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;#007AFF&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;justifyContent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;alignItems&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&amp;gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;FlatList&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;na&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;na&#34;&gt;keyExtractor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;na&#34;&gt;renderItem&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;marginVertical&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;marginHorizontal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;backgroundColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#fff&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;borderRadius&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;shadowColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#000&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;shadowOffset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;shadowOpacity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;shadowRadius&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;elevation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}}&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fontSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fontWeight&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&amp;gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#666&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&amp;gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#666&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&amp;gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;phone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;UserList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-5&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;platform-specific-code&#34;&gt;Platform-Specific Code&lt;/h2&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        JSX&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-6&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-6&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-6&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Platform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;StyleSheet&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;styles&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;StyleSheet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Platform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;ios&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;backgroundColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#f8f8f8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;android&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;backgroundColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#fff&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}),&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Platform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;ios&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fontFamily&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Helvetica&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fontSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;android&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fontFamily&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Roboto&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fontSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}),&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Platform-specific file extensions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Component.android.js - Android specific&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;// Component.ios.js - iOS specific&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-6&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;performance-optimization&#34;&gt;Performance Optimization&lt;/h2&gt;&#xA;&lt;h3 id=&#34;memoization&#34;&gt;Memoization&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        JSX&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-7&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-7&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-7&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;memo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useMemo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useCallback&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TodoItem&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;memo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;onToggle&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;TodoItem rendered:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;TouchableOpacity&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;na&#34;&gt;onPress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;onToggle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;marginVertical&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;backgroundColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;completed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#e0e0e0&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#fff&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;borderRadius&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;borderWidth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;borderColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#ddd&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;textDecorationLine&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;completed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;line-through&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}}&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;TouchableOpacity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TodoList&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;todos&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;completedCount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useMemo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;todos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;completed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handleToggle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useCallback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// Toggle logic here&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Completed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;completedCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;TodoItem&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;na&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;na&#34;&gt;todo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;todo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;na&#34;&gt;onToggle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;handleToggle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;))}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-7&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;&#xA;&lt;h3 id=&#34;jest-and-react-native-testing-library&#34;&gt;Jest and React Native Testing Library&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        BASH&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-8&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-8&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-8&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install --save-dev @testing-library/react-native @testing-library/jest-native&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-8&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        JSX&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-9&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-9&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-9&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fireEvent&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;@testing-library/react-native&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Counter&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./Counter&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;describe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Counter&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;it&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;renders correctly&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getByText&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Counter&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;expect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getByText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Count: 0&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toBeTruthy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;it&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;increments count when button is pressed&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getByText&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Counter&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getByText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Increment&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fireEvent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;press&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;expect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getByText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Count: 1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toBeTruthy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-9&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;deployment&#34;&gt;Deployment&lt;/h2&gt;&#xA;&lt;h3 id=&#34;build-and-release&#34;&gt;Build and Release&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        BASH&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-10&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-10&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-10&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# For Android&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; android&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./gradlew assembleRelease&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# For iOS (on macOS)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ios&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pod install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;xcodebuild -workspace MyApp.xcworkspace -scheme MyApp -configuration Release -sdk iphoneos -archivePath ./build/MyApp.xcarchive archive&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Using Expo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;expo build:android&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;expo build:ios&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-10&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;best-practices&#34;&gt;Best Practices&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Use TypeScript&lt;/strong&gt;: Better type safety and developer experience&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Follow React Native Style Guide&lt;/strong&gt;: Consistent code structure&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Optimize Images&lt;/strong&gt;: Use appropriate image sizes and formats&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Handle Permissions Properly&lt;/strong&gt;: Request and handle device permissions&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Test on Real Devices&lt;/strong&gt;: Don&amp;rsquo;t rely only on simulators/emulators&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Keep Dependencies Updated&lt;/strong&gt;: Regular security and performance updates&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Use Fast Refresh&lt;/strong&gt;: Leverage hot reloading for faster development&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Implement Error Boundaries&lt;/strong&gt;: Graceful error handling&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;React Native provides a powerful way to build cross-platform mobile applications with a single codebase, making it an excellent choice for modern mobile development.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Machine Learning Fundamentals and Applications</title>
      <link>http://localhost:1313/posts/machine-learning-fundamentals-and-applications/</link>
      <pubDate>Tue, 16 Sep 2025 09:27:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/machine-learning-fundamentals-and-applications/</guid>
      <description>&lt;h1 id=&#34;machine-learning-fundamentals-and-applications&#34;&gt;Machine Learning Fundamentals and Applications&lt;/h1&gt;&#xA;&lt;p&gt;Machine Learning is transforming industries and creating new possibilities. In this post, we&amp;rsquo;ll explore the fundamental concepts and practical applications of ML.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-machine-learning&#34;&gt;What is Machine Learning?&lt;/h2&gt;&#xA;&lt;p&gt;Machine Learning is a subset of AI that enables computers to learn and improve from experience without being explicitly programmed. It focuses on developing algorithms that can learn patterns from data.&lt;/p&gt;&#xA;&lt;h2 id=&#34;types-of-machine-learning&#34;&gt;Types of Machine Learning&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-supervised-learning&#34;&gt;1. Supervised Learning&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Classification Example:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cybersecurity and Secure Coding Practices</title>
      <link>http://localhost:1313/posts/cybersecurity-and-secure-coding-practices/</link>
      <pubDate>Tue, 16 Sep 2025 09:26:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/cybersecurity-and-secure-coding-practices/</guid>
      <description>&lt;h1 id=&#34;cybersecurity-and-secure-coding-practices&#34;&gt;Cybersecurity and Secure Coding Practices&lt;/h1&gt;&#xA;&lt;p&gt;Security should be a fundamental part of software development. In this post, we&amp;rsquo;ll explore essential security practices and common vulnerabilities.&lt;/p&gt;&#xA;&lt;h2 id=&#34;owasp-top-10-security-risks&#34;&gt;OWASP Top 10 Security Risks&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-injection-attacks&#34;&gt;1. Injection Attacks&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;SQL Injection Prevention:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        JAVA&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-0&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-0&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-0&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Vulnerable code&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;SELECT * FROM users WHERE id = &amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;userId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Secure code using PreparedStatement&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PreparedStatement&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stmt&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;prepareStatement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;SELECT * FROM users WHERE id = ?&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;userId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ResultSet&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rs&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;executeQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-0&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;Command Injection Prevention:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Database Design and SQL Optimization</title>
      <link>http://localhost:1313/posts/database-design-and-sql-optimization/</link>
      <pubDate>Tue, 16 Sep 2025 09:25:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/database-design-and-sql-optimization/</guid>
      <description>&lt;h1 id=&#34;database-design-and-sql-optimization&#34;&gt;Database Design and SQL Optimization&lt;/h1&gt;&#xA;&lt;p&gt;A well-designed database is crucial for application performance and maintainability. In this post, we&amp;rsquo;ll explore database design principles and SQL optimization techniques.&lt;/p&gt;&#xA;&lt;h2 id=&#34;database-design-principles&#34;&gt;Database Design Principles&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-normalization-vs-denormalization&#34;&gt;1. Normalization vs Denormalization&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Normalization&lt;/strong&gt; reduces data redundancy and improves data integrity:&lt;/p&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        SQL&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-0&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-0&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-0&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- First Normal Form (1NF): Atomic values&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;SERIAL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;PRIMARY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;UNIQUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;phone_numbers&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;TEXT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- Array for multiple phones&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- Second Normal Form (2NF): Remove partial dependencies&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;SERIAL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;PRIMARY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;REFERENCES&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;order_date&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;DATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total_amount&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;DECIMAL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;order_items&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;SERIAL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;PRIMARY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;order_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;REFERENCES&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;product_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;quantity&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;DECIMAL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-0&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;Denormalization&lt;/strong&gt; can improve read performance at the cost of write complexity.&lt;/p&gt;</description>
    </item>
    <item>
      <title>React Hooks and Modern Frontend Development</title>
      <link>http://localhost:1313/posts/react-hooks-and-modern-frontend-development/</link>
      <pubDate>Tue, 16 Sep 2025 09:24:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/react-hooks-and-modern-frontend-development/</guid>
      <description>&lt;h1 id=&#34;react-hooks-and-modern-frontend-development&#34;&gt;React Hooks and Modern Frontend Development&lt;/h1&gt;&#xA;&lt;p&gt;React Hooks revolutionized how we write React components. In this post, we&amp;rsquo;ll explore the most important hooks and modern React patterns.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-are-react-hooks&#34;&gt;What are React Hooks?&lt;/h2&gt;&#xA;&lt;p&gt;Hooks are functions that let you use state and other React features in functional components. They were introduced in React 16.8 to solve problems with class components.&lt;/p&gt;&#xA;&lt;h2 id=&#34;essential-react-hooks&#34;&gt;Essential React Hooks&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-usestate---managing-component-state&#34;&gt;1. useState - Managing Component State&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        JSX&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-0&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-0&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-0&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Counter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;onClick&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;Increment&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-0&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h3 id=&#34;2-useeffect---side-effects&#34;&gt;2. useEffect - Side Effects&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        JSX&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-1&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-1&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-1&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useEffect&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;UserProfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;userId&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;useEffect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// Fetch user data when userId changes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;fetch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`/api/users/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userId&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// Cleanup function&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Cleanup&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Dependency array&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Loading&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-1&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h3 id=&#34;3-usecontext---context-api&#34;&gt;3. useContext - Context API&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        JSX&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-2&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-2&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-2&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useContext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createContext&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Create context&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ThemeContext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createContext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;light&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;App&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ThemeContext.Provider&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;dark&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Toolbar&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ThemeContext.Provider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Toolbar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ThemeButton&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ThemeButton&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useContext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ThemeContext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Toggle&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-2&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h3 id=&#34;4-usereducer---complex-state-logic&#34;&gt;4. useReducer - Complex State Logic&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        JSX&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-3&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-3&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-3&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useReducer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;initialState&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;reducer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;increment&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;decrement&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Counter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dispatch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useReducer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;reducer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;initialState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;onClick&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dispatch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;increment&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})}&amp;gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;onClick&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dispatch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;decrement&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})}&amp;gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-3&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;custom-hooks&#34;&gt;Custom Hooks&lt;/h2&gt;&#xA;&lt;p&gt;Create reusable logic with custom hooks:&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS Cloud Computing Essentials</title>
      <link>http://localhost:1313/posts/aws-cloud-computing-essentials/</link>
      <pubDate>Tue, 16 Sep 2025 09:23:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/aws-cloud-computing-essentials/</guid>
      <description>&lt;h1 id=&#34;aws-cloud-computing-essentials&#34;&gt;AWS Cloud Computing Essentials&lt;/h1&gt;&#xA;&lt;p&gt;Amazon Web Services (AWS) is the leading cloud platform offering over 200 services. In this post, we&amp;rsquo;ll explore the fundamental AWS services and concepts.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-cloud-computing&#34;&gt;What is Cloud Computing?&lt;/h2&gt;&#xA;&lt;p&gt;Cloud computing provides on-demand access to computing resources over the internet. Instead of owning and maintaining physical servers, you can use cloud resources as needed.&lt;/p&gt;&#xA;&lt;h2 id=&#34;core-aws-services&#34;&gt;Core AWS Services&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-ec2-elastic-compute-cloud&#34;&gt;1. EC2 (Elastic Compute Cloud)&lt;/h3&gt;&#xA;&lt;p&gt;Virtual servers in the cloud that you can use to run applications.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker and Containerization Fundamentals</title>
      <link>http://localhost:1313/posts/docker-and-containerization-fundamentals/</link>
      <pubDate>Tue, 16 Sep 2025 09:22:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/docker-and-containerization-fundamentals/</guid>
      <description>&lt;h1 id=&#34;docker-and-containerization-fundamentals&#34;&gt;Docker and Containerization Fundamentals&lt;/h1&gt;&#xA;&lt;p&gt;Docker has revolutionized how we develop, ship, and run applications. In this post, we&amp;rsquo;ll explore the core concepts of containerization and Docker.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-docker&#34;&gt;What is Docker?&lt;/h2&gt;&#xA;&lt;p&gt;Docker is a platform for developing, shipping, and running applications in containers. Containers are lightweight, portable, and self-sufficient units that can run applications and their dependencies.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-use-docker&#34;&gt;Why Use Docker?&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-consistency&#34;&gt;1. Consistency&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Same environment from development to production&lt;/li&gt;&#xA;&lt;li&gt;No more &amp;ldquo;works on my machine&amp;rdquo; issues&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-isolation&#34;&gt;2. Isolation&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Applications run in their own containers&lt;/li&gt;&#xA;&lt;li&gt;Dependencies don&amp;rsquo;t conflict with each other&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-portability&#34;&gt;3. Portability&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Run anywhere Docker runs&lt;/li&gt;&#xA;&lt;li&gt;Easy deployment across different platforms&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;basic-docker-commands&#34;&gt;Basic Docker Commands&lt;/h2&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        BASH&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-0&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-0&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-0&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Build an image&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker build -t my-app .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Run a container&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -d -p 8080:8080 my-app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# List running containers&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker ps&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Stop a container&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker stop container_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Remove a container&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker rm container_id&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-0&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;dockerfile-example&#34;&gt;Dockerfile Example&lt;/h2&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        DOCKERFILE&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-1&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-1&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-1&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# Use official Node.js runtime as base image&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;node:18-alpine&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Set working directory&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WORKDIR&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;/app&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Copy package files&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; package*.json ./&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Install dependencies&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; npm install&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Copy application code&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; . .&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Expose port&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXPOSE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;3000&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Start the application&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CMD&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;npm&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-1&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;docker-compose-for-multi-container-apps&#34;&gt;Docker Compose for Multi-Container Apps&lt;/h2&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        YAML&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-2&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-2&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-2&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;3.8&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;web&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;3000:3000&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;depends_on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;postgres:13&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;POSTGRES_DB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;myapp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;POSTGRES_USER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;postgres_data:/var/lib/postgresql/data&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;postgres_data:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-2&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;best-practices&#34;&gt;Best Practices&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Use Multi-Stage Builds&lt;/strong&gt;: Reduce image size by using multiple build stages&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Don&amp;rsquo;t Run as Root&lt;/strong&gt;: Create non-root users for security&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Use .dockerignore&lt;/strong&gt;: Exclude unnecessary files from build context&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tag Images Properly&lt;/strong&gt;: Use semantic versioning for image tags&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Keep Images Small&lt;/strong&gt;: Use alpine images and clean up cache&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;docker-vs-virtual-machines&#34;&gt;Docker vs Virtual Machines&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Aspect&lt;/th&gt;&#xA;          &lt;th&gt;Docker Containers&lt;/th&gt;&#xA;          &lt;th&gt;Virtual Machines&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Startup Time&lt;/td&gt;&#xA;          &lt;td&gt;Seconds&lt;/td&gt;&#xA;          &lt;td&gt;Minutes&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Resource Usage&lt;/td&gt;&#xA;          &lt;td&gt;Minimal overhead&lt;/td&gt;&#xA;          &lt;td&gt;Full OS overhead&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Portability&lt;/td&gt;&#xA;          &lt;td&gt;Highly portable&lt;/td&gt;&#xA;          &lt;td&gt;Less portable&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Isolation&lt;/td&gt;&#xA;          &lt;td&gt;Process-level&lt;/td&gt;&#xA;          &lt;td&gt;Hardware-level&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;Docker containers provide a lightweight, efficient way to package and deploy applications, making them ideal for modern development workflows.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding Microservices Architecture</title>
      <link>http://localhost:1313/posts/understanding-microservices-architecture/</link>
      <pubDate>Tue, 16 Sep 2025 09:21:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/understanding-microservices-architecture/</guid>
      <description>&lt;h1 id=&#34;understanding-microservices-architecture&#34;&gt;Understanding Microservices Architecture&lt;/h1&gt;&#xA;&lt;p&gt;Microservices have become the go-to architecture for building scalable, maintainable applications. In this post, we&amp;rsquo;ll explore the key concepts and benefits of microservices.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-are-microservices&#34;&gt;What are Microservices?&lt;/h2&gt;&#xA;&lt;p&gt;Microservices are a software development technique where applications are built as a collection of small, independent services that communicate over well-defined APIs.&lt;/p&gt;&#xA;&lt;h2 id=&#34;key-benefits&#34;&gt;Key Benefits&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-scalability&#34;&gt;1. Scalability&lt;/h3&gt;&#xA;&lt;p&gt;Each service can be scaled independently based on its specific needs.&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-technology-diversity&#34;&gt;2. Technology Diversity&lt;/h3&gt;&#xA;&lt;p&gt;Different services can use different technologies that best fit their requirements.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hugo Theme Customization</title>
      <link>http://localhost:1313/posts/hugo-theme-customization/</link>
      <pubDate>Mon, 15 Sep 2025 16:45:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/hugo-theme-customization/</guid>
      <description>&lt;h1 id=&#34;hugo-theme-customization&#34;&gt;Hugo Theme Customization&lt;/h1&gt;&#xA;&lt;p&gt;The Hugo Narrow theme is highly customizable. Let&amp;rsquo;s explore how to modify and extend the theme to match your specific needs and branding.&lt;/p&gt;&#xA;&lt;h2 id=&#34;theme-structure&#34;&gt;Theme Structure&lt;/h2&gt;&#xA;&lt;p&gt;Understanding the theme structure is key to customization:&lt;/p&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        PLAINTEXT&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-0&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-0&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-0&#34;&gt;&#xD;&#xA;    &lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;themes/hugo-narrow/&#xD;&#xA;├── layouts/          # Template files&#xD;&#xA;├── assets/           # SCSS, JS, and other assets&#xD;&#xA;├── static/           # Static files (images, fonts)&#xD;&#xA;├── data/             # Data files&#xD;&#xA;└── i18n/             # Internationalization&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-0&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;customizing-colors&#34;&gt;Customizing Colors&lt;/h2&gt;&#xA;&lt;p&gt;The theme supports multiple color schemes. You can add your own:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploying Hugo Sites</title>
      <link>http://localhost:1313/posts/deploying-hugo-sites/</link>
      <pubDate>Mon, 15 Sep 2025 09:15:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/deploying-hugo-sites/</guid>
      <description>&lt;h1 id=&#34;deploying-hugo-sites&#34;&gt;Deploying Hugo Sites&lt;/h1&gt;&#xA;&lt;p&gt;Once you&amp;rsquo;ve built your Hugo site, the next step is deployment. Hugo makes it easy to deploy to various platforms. Let&amp;rsquo;s explore some popular deployment options.&lt;/p&gt;&#xA;&lt;h2 id=&#34;github-pages&#34;&gt;GitHub Pages&lt;/h2&gt;&#xA;&lt;p&gt;GitHub Pages is a great option for hosting Hugo sites:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Create a GitHub repository&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Push your Hugo source code&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Set up GitHub Actions for automated builds&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Configure the repository settings for Pages&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        YAML&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-0&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-0&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-0&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# .github/workflows/deploy.yml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Deploy Hugo site to Pages&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;branches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;main ]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;jobs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;actions/checkout@v3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;peaceiris/actions-hugo@v2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hugo --minify&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;peaceiris/actions-gh-pages@v3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;github_token&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;publish_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;./public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-0&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;netlify&#34;&gt;Netlify&lt;/h2&gt;&#xA;&lt;p&gt;Netlify offers excellent performance and features:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Advanced Hugo Features</title>
      <link>http://localhost:1313/posts/advanced-hugo-features/</link>
      <pubDate>Sun, 14 Sep 2025 14:30:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/advanced-hugo-features/</guid>
      <description>&lt;h1 id=&#34;advanced-hugo-features&#34;&gt;Advanced Hugo Features&lt;/h1&gt;&#xA;&lt;p&gt;Building on our introduction to Hugo, let&amp;rsquo;s explore some of the more advanced features that make Hugo a powerful static site generator.&lt;/p&gt;&#xA;&lt;h2 id=&#34;custom-shortcodes&#34;&gt;Custom Shortcodes&lt;/h2&gt;&#xA;&lt;p&gt;Hugo supports custom shortcodes that allow you to embed complex content easily:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Example shortcode implementation&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Site&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;RenderShortcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Custom rendering logic&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;renderedContent&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;h2 id=&#34;taxonomies-and-content-organization&#34;&gt;Taxonomies and Content Organization&lt;/h2&gt;&#xA;&lt;p&gt;Hugo&amp;rsquo;s taxonomy system allows for flexible content organization:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Started with Hugo</title>
      <link>http://localhost:1313/posts/getting-started-with-hugo/</link>
      <pubDate>Sat, 13 Sep 2025 10:00:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/getting-started-with-hugo/</guid>
      <description>&lt;h1 id=&#34;getting-started-with-hugo&#34;&gt;Getting Started with Hugo&lt;/h1&gt;&#xA;&lt;p&gt;Hugo is a fast and flexible static site generator built with Go. In this post, we&amp;rsquo;ll explore the basics of setting up and using Hugo for your website.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-choose-hugo&#34;&gt;Why Choose Hugo?&lt;/h2&gt;&#xA;&lt;p&gt;Hugo offers several advantages:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Blazing Fast&lt;/strong&gt;: Written in Go, Hugo is incredibly fast at generating sites&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Easy to Use&lt;/strong&gt;: Simple commands and intuitive structure&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Flexible&lt;/strong&gt;: Supports themes, content types, and custom layouts&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;No Dependencies&lt;/strong&gt;: No need for databases or complex server setups&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;basic-hugo-commands&#34;&gt;Basic Hugo Commands&lt;/h2&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        BASH&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-0&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-0&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-0&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Create a new site&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new site my-site&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Add a new post&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new posts/my-post.md&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Start development server&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo server -D&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Build for production&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo --minify&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-0&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;content-organization&#34;&gt;Content Organization&lt;/h2&gt;&#xA;&lt;p&gt;Hugo uses a simple but powerful content organization:&lt;/p&gt;</description>
    </item>
    <item>
      <title>My First Post</title>
      <link>http://localhost:1313/posts/my-first-post/</link>
      <pubDate>Fri, 12 Sep 2025 12:03:36 +0530</pubDate>
      <guid>http://localhost:1313/posts/my-first-post/</guid>
      <description>&lt;h1 id=&#34;welcome-to-my-hugo-blog&#34;&gt;Welcome to My Hugo Blog&lt;/h1&gt;&#xA;&lt;p&gt;This is my first post using the Hugo Narrow theme. The theme supports many features including:&lt;/p&gt;&#xA;&lt;h2 id=&#34;features-configured&#34;&gt;Features Configured&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Recent Posts&lt;/strong&gt;: Shows the 5 most recent posts on the homepage&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Related Posts&lt;/strong&gt;: Displays 3 related posts at the bottom of each post&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reading Progress&lt;/strong&gt;: Shows a progress bar while reading posts&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;License Information&lt;/strong&gt;: CC BY-NC-SA 4.0 license displayed on posts&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Multiple Themes&lt;/strong&gt;: Support for various color schemes&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Dark/Light Mode&lt;/strong&gt;: Toggle between dark and light themes&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Multilingual Support&lt;/strong&gt;: Support for multiple languages&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;code-example&#34;&gt;Code Example&lt;/h2&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        JAVASCRIPT&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-0&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;Collapse&#34;&#xD;&#xA;          aria-label=&#34;Collapse&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;Collapse&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-0&#34;&#xD;&#xA;        title=&#34;Copy&#34;&#xD;&#xA;        aria-label=&#34;Copy&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;Copy&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-0&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;helloHugo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello from Hugo Narrow theme!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Welcome to my blog&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        Click to expand and view more&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-0&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Copied&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;Selected&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;Copy&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Expand&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Expand&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;Collapse&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;Collapse&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;math-support&#34;&gt;Math Support&lt;/h2&gt;&#xA;&lt;p&gt;The theme supports KaTeX for mathematical expressions:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/work/work/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/work/work/</guid>
      <description></description>
    </item>
  </channel>
</rss>
