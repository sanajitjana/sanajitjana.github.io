{"version":3,"sources":["file:///D:/My%20Projects/myblog/themes/hugo-narrow/assets/js/search.js"],"sourcesContent":["/**\r\n * 搜索功能模块\r\n *\r\n * 提供全站搜索功能，支持键盘导航和高亮显示\r\n *\r\n */\r\n\r\n(function () {\r\n  \"use strict\";\r\n\r\n  // DOM 元素\r\n  let searchModal = null;\r\n  let searchOverlay = null;\r\n  let searchInput = null;\r\n  let searchClear = null;\r\n  let searchClose = null;\r\n  let searchResults = null;\r\n  let searchEmpty = null;\r\n  let searchLoading = null;\r\n  let searchNoResults = null;\r\n  let searchResultsList = null;\r\n  let searchStats = null;\r\n  let searchItems = null;\r\n\r\n  // 状态变量\r\n  let isModalVisible = false;\r\n  let searchData = null;\r\n  let currentResults = [];\r\n  let selectedIndex = -1;\r\n  let searchTimeout = null;\r\n\r\n  // 初始化\r\n  function init() {\r\n    // 获取 DOM 元素\r\n    searchModal = document.getElementById(\"search-modal\");\r\n    searchOverlay = document.getElementById(\"search-overlay\");\r\n    searchInput = document.getElementById(\"search-input\");\r\n    searchClear = document.getElementById(\"search-clear\");\r\n    searchClose = document.getElementById(\"search-close\");\r\n    searchResults = document.getElementById(\"search-results\");\r\n    searchEmpty = document.getElementById(\"search-empty\");\r\n    searchLoading = document.getElementById(\"search-loading\");\r\n    searchNoResults = document.getElementById(\"search-no-results\");\r\n    searchResultsList = document.getElementById(\"search-results-list\");\r\n    searchStats = document.getElementById(\"search-stats\");\r\n    searchItems = document.getElementById(\"search-items\");\r\n\r\n    // 检查是否有搜索模态框\r\n    if (!searchModal) {\r\n      return;\r\n    }\r\n\r\n    // 绑定事件\r\n    bindEvents();\r\n\r\n    // 预加载搜索数据\r\n    loadSearchData();\r\n  }\r\n\r\n  // 绑定事件\r\n  function bindEvents() {\r\n    // 关闭按钮\r\n    if (searchClose) {\r\n      searchClose.addEventListener(\"click\", hideSearch);\r\n    }\r\n\r\n    // 清空按钮\r\n    if (searchClear) {\r\n      searchClear.addEventListener(\"click\", clearSearch);\r\n    }\r\n\r\n    // 点击遮罩层关闭\r\n    if (searchOverlay) {\r\n      searchOverlay.addEventListener(\"click\", hideSearch);\r\n    }\r\n\r\n    // 输入框事件\r\n    if (searchInput) {\r\n      searchInput.addEventListener(\"input\", handleInput);\r\n      searchInput.addEventListener(\"keydown\", handleKeydown);\r\n    }\r\n\r\n    // 全局键盘事件\r\n    document.addEventListener(\"keydown\", handleGlobalKeydown);\r\n\r\n    // 搜索结果点击事件\r\n    if (searchItems) {\r\n      searchItems.addEventListener(\"click\", handleResultClick);\r\n    }\r\n  }\r\n\r\n  // 处理全局键盘事件\r\n  function handleGlobalKeydown(e) {\r\n    // Ctrl/Cmd + K 打开搜索\r\n    if ((e.ctrlKey || e.metaKey) \u0026\u0026 e.key === \"k\") {\r\n      e.preventDefault();\r\n      showSearch();\r\n      return;\r\n    }\r\n\r\n    // ESC 关闭搜索\r\n    if (e.key === \"Escape\" \u0026\u0026 isModalVisible) {\r\n      hideSearch();\r\n      return;\r\n    }\r\n  }\r\n\r\n  // 处理输入框键盘事件\r\n  function handleKeydown(e) {\r\n    if (!isModalVisible) return;\r\n\r\n    switch (e.key) {\r\n      case \"ArrowDown\":\r\n        e.preventDefault();\r\n        navigateResults(1);\r\n        break;\r\n      case \"ArrowUp\":\r\n        e.preventDefault();\r\n        navigateResults(-1);\r\n        break;\r\n      case \"Enter\":\r\n        e.preventDefault();\r\n        selectResult();\r\n        break;\r\n      case \"Escape\":\r\n        hideSearch();\r\n        break;\r\n    }\r\n  }\r\n\r\n  // 处理输入事件\r\n  function handleInput(e) {\r\n    const query = e.target.value.trim();\r\n\r\n    // 显示/隐藏清空按钮\r\n    toggleClearButton(query.length \u003e 0);\r\n\r\n    // 清除之前的搜索定时器\r\n    if (searchTimeout) {\r\n      clearTimeout(searchTimeout);\r\n    }\r\n\r\n    // 重置导航状态\r\n    resetNavigation();\r\n\r\n    // 防抖搜索\r\n    searchTimeout = setTimeout(() =\u003e {\r\n      if (query.length === 0) {\r\n        showEmptyState();\r\n      } else {\r\n        performSearch(query);\r\n      }\r\n    }, 300);\r\n  }\r\n\r\n  // 处理结果点击\r\n  function handleResultClick(e) {\r\n    const resultItem = e.target.closest(\"[data-url]\");\r\n    if (resultItem) {\r\n      const url = resultItem.dataset.url;\r\n      if (url) {\r\n        window.location.href = url;\r\n      }\r\n    }\r\n  }\r\n\r\n  // 显示搜索模态框\r\n  function showSearch() {\r\n    if (!searchModal || isModalVisible) return;\r\n\r\n    isModalVisible = true;\r\n\r\n    // 显示遮罩层和模态框\r\n    searchOverlay.classList.remove(\"opacity-0\", \"pointer-events-none\");\r\n    searchOverlay.classList.add(\"opacity-100\");\r\n\r\n    searchModal.classList.remove(\r\n      \"opacity-0\",\r\n      \"scale-95\",\r\n      \"pointer-events-none\",\r\n    );\r\n    searchModal.classList.add(\"opacity-100\", \"scale-100\");\r\n\r\n    // 防止背景滚动\r\n    document.body.style.overflow = \"hidden\";\r\n\r\n    // 聚焦输入框\r\n    setTimeout(() =\u003e {\r\n      if (searchInput) {\r\n        searchInput.focus();\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  // 隐藏搜索模态框\r\n  function hideSearch() {\r\n    if (!searchModal || !isModalVisible) return;\r\n\r\n    isModalVisible = false;\r\n\r\n    // 隐藏遮罩层和模态框\r\n    searchOverlay.classList.add(\"opacity-0\", \"pointer-events-none\");\r\n    searchOverlay.classList.remove(\"opacity-100\");\r\n\r\n    searchModal.classList.add(\"opacity-0\", \"scale-95\", \"pointer-events-none\");\r\n    searchModal.classList.remove(\"opacity-100\", \"scale-100\");\r\n\r\n    // 恢复背景滚动\r\n    document.body.style.overflow = \"\";\r\n\r\n    // 清空搜索内容和重置状态\r\n    clearSearchContent();\r\n    resetNavigation();\r\n  }\r\n\r\n  // 清空搜索内容\r\n  function clearSearchContent() {\r\n    if (searchInput) {\r\n      searchInput.value = \"\";\r\n    }\r\n    toggleClearButton(false);\r\n    showEmptyState();\r\n    currentResults = [];\r\n    selectedIndex = -1;\r\n  }\r\n\r\n  // 重置导航状态\r\n  function resetNavigation() {\r\n    // 移除之前的选中状态\r\n    const prevSelected =\r\n      searchItems \u0026\u0026 searchItems.querySelector(\".search-result-selected\");\r\n    if (prevSelected) {\r\n      prevSelected.classList.remove(\"search-result-selected\");\r\n    }\r\n    selectedIndex = -1;\r\n  }\r\n\r\n  // 清空搜索\r\n  function clearSearch() {\r\n    clearSearchContent();\r\n    if (searchInput) {\r\n      searchInput.focus();\r\n    }\r\n  }\r\n\r\n  // 切换清空按钮显示\r\n  function toggleClearButton(show) {\r\n    if (!searchClear) return;\r\n\r\n    if (show) {\r\n      searchClear.classList.remove(\"opacity-0\", \"pointer-events-none\");\r\n      searchClear.classList.add(\"opacity-100\");\r\n    } else {\r\n      searchClear.classList.add(\"opacity-0\", \"pointer-events-none\");\r\n      searchClear.classList.remove(\"opacity-100\");\r\n    }\r\n  }\r\n\r\n  // 显示空状态\r\n  function showEmptyState() {\r\n    hideAllStates();\r\n    resetNavigation();\r\n    if (searchEmpty) {\r\n      searchEmpty.classList.remove(\"hidden\");\r\n    }\r\n  }\r\n\r\n  // 显示加载状态\r\n  function showLoadingState() {\r\n    hideAllStates();\r\n    resetNavigation();\r\n    if (searchLoading) {\r\n      searchLoading.classList.remove(\"hidden\");\r\n    }\r\n  }\r\n\r\n  // 显示无结果状态\r\n  function showNoResultsState() {\r\n    hideAllStates();\r\n    resetNavigation();\r\n    if (searchNoResults) {\r\n      searchNoResults.classList.remove(\"hidden\");\r\n    }\r\n  }\r\n\r\n  // 显示结果列表\r\n  function showResultsList() {\r\n    hideAllStates();\r\n    if (searchResultsList) {\r\n      searchResultsList.classList.remove(\"hidden\");\r\n    }\r\n  }\r\n\r\n  // 隐藏所有状态\r\n  function hideAllStates() {\r\n    const states = [\r\n      searchEmpty,\r\n      searchLoading,\r\n      searchNoResults,\r\n      searchResultsList,\r\n    ];\r\n    states.forEach((state) =\u003e {\r\n      if (state) {\r\n        state.classList.add(\"hidden\");\r\n      }\r\n    });\r\n  }\r\n\r\n  // 加载搜索数据\r\n  async function loadSearchData() {\r\n    if (searchData) return searchData;\r\n\r\n    try {\r\n      \r\n      let indexURL = window.HUGO_SEARCH_CONFIG?.searchIndexURL || \"/index.json\";\r\n      indexURL = indexURL.replace(/['\"]/g, '').replace(/%22/g, '');\r\n\r\n      const response = await fetch(indexURL);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // 适配 insight.js 的数据结构\r\n      if (data \u0026\u0026 typeof data === \"object\") {\r\n        // 转换为我们需要的格式\r\n        const posts = data.posts || [];\r\n        searchData = posts.map((post) =\u003e ({\r\n          title: post.title,\r\n          content: post.text,\r\n          summary: post.text ? post.text.substring(0, 200) : \"\",\r\n          url: post.link,\r\n          date: \"\",\r\n          categories: [],\r\n          tags: [],\r\n        }));\r\n      } else {\r\n        searchData = [];\r\n      }\r\n\r\n      return searchData;\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // 执行搜索\r\n  async function performSearch(query) {\r\n    showLoadingState();\r\n\r\n    try {\r\n      const data = await loadSearchData();\r\n      const results = searchInData(data, query);\r\n\r\n      currentResults = results;\r\n      // 重置导航索引但不设置选中状态\r\n      selectedIndex = -1;\r\n\r\n      if (results.length === 0) {\r\n        showNoResultsState();\r\n      } else {\r\n        displayResults(results, query);\r\n        showResultsList();\r\n      }\r\n    } catch (error) {\r\n      showNoResultsState();\r\n    }\r\n  }\r\n\r\n  // 解析关键词 - 基于 insight.js\r\n  function parseKeywords(keywords) {\r\n    return keywords\r\n      .split(\" \")\r\n      .filter((keyword) =\u003e {\r\n        return !!keyword;\r\n      })\r\n      .map((keyword) =\u003e {\r\n        return keyword.toLowerCase();\r\n      });\r\n  }\r\n\r\n  // 过滤函数 - 基于 insight.js，修复字段检查\r\n  function filter(keywords, obj, fields) {\r\n    const keywordArray = parseKeywords(keywords);\r\n    const containKeywords = keywordArray.filter((keyword) =\u003e {\r\n      const containFields = fields.filter((field) =\u003e {\r\n        if (!obj.hasOwnProperty(field) || !obj[field]) {\r\n          return false;\r\n        }\r\n        // 确保字段值是字符串\r\n        const fieldValue = String(obj[field]).toLowerCase();\r\n        if (fieldValue.indexOf(keyword) \u003e -1) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      if (containFields.length \u003e 0) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    return containKeywords.length === keywordArray.length;\r\n  }\r\n\r\n  // 权重计算函数 - 基于 insight.js，修复字段检查\r\n  function weight(keywords, obj, fields, weights) {\r\n    let value = 0;\r\n    parseKeywords(keywords).forEach((keyword) =\u003e {\r\n      const pattern = new RegExp(escapeRegExp(keyword), \"gim\"); // Global, Multi-line, Case-insensitive\r\n      fields.forEach((field, index) =\u003e {\r\n        if (obj.hasOwnProperty(field) \u0026\u0026 obj[field]) {\r\n          // 确保字段值是字符串\r\n          const fieldValue = String(obj[field]);\r\n          const matches = fieldValue.match(pattern);\r\n          value += matches ? matches.length * weights[index] : 0;\r\n        }\r\n      });\r\n    });\r\n    return value;\r\n  }\r\n\r\n  // 转义正则表达式特殊字符\r\n  function escapeRegExp(string) {\r\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$\u0026\");\r\n  }\r\n\r\n  // 简化的搜索算法 - 适配 insight.js 数据结构\r\n  function searchInData(data, query) {\r\n    if (!query || query.trim() === \"\") {\r\n      return [];\r\n    }\r\n\r\n    const keywords = parseKeywords(query);\r\n    const results = [];\r\n\r\n    data.forEach((item, index) =\u003e {\r\n      let score = 0;\r\n      let hasMatch = false;\r\n\r\n      // 检查每个关键词\r\n      keywords.forEach((keyword) =\u003e {\r\n        const keywordLower = keyword.toLowerCase();\r\n\r\n        // 检查标题\r\n        if (item.title \u0026\u0026 item.title.toLowerCase().includes(keywordLower)) {\r\n          score += 10;\r\n          hasMatch = true;\r\n        }\r\n\r\n        // 检查内容 (insight.js 使用 content 字段)\r\n        if (item.content \u0026\u0026 item.content.toLowerCase().includes(keywordLower)) {\r\n          score += 1;\r\n          hasMatch = true;\r\n        }\r\n\r\n        // 检查摘要 (如果有的话)\r\n        if (item.summary \u0026\u0026 item.summary.toLowerCase().includes(keywordLower)) {\r\n          score += 5;\r\n          hasMatch = true;\r\n        }\r\n      });\r\n\r\n      if (hasMatch) {\r\n        results.push({\r\n          ...item,\r\n          score,\r\n          keywords,\r\n        });\r\n      }\r\n    });\r\n\r\n    // 按分数排序\r\n    const sortedResults = results.sort((a, b) =\u003e b.score - a.score);\r\n\r\n    return sortedResults;\r\n  }\r\n\r\n  // 显示搜索结果\r\n  function displayResults(results, query) {\r\n    if (!searchStats || !searchItems) return;\r\n\r\n    // 更新统计信息 - 从模板元素读取翻译\r\n    const statsTemplate = document.getElementById(\"search-stats\");\r\n    if (statsTemplate) {\r\n      const template = statsTemplate.dataset.template;\r\n      searchStats.textContent = template.replace('%d', results.length);\r\n    } else {\r\n      searchStats.textContent = `Found ${results.length} results`;\r\n    }\r\n\r\n    // 清空之前的结果\r\n    searchItems.innerHTML = \"\";\r\n\r\n    // 生成结果项\r\n    results.forEach((result, index) =\u003e {\r\n      const resultElement = createResultElement(result, query, index);\r\n      searchItems.appendChild(resultElement);\r\n    });\r\n  }\r\n\r\n  // 根据匹配度分数生成星星显示\r\n  function generateStarRating(score) {\r\n    if (!score || score \u003c= 0) return \"\";\r\n\r\n    // 定义星星数量的阈值\r\n    // 基于当前评分系统：标题匹配10分，摘要匹配5分，内容匹配1分\r\n    let starCount;\r\n    if (score \u003e= 20) {\r\n      starCount = 5; // 高匹配度：多个关键词在标题中匹配\r\n    } else if (score \u003e= 15) {\r\n      starCount = 4; // 较高匹配度：标题+摘要匹配\r\n    } else if (score \u003e= 10) {\r\n      starCount = 3; // 中等匹配度：标题匹配或多个摘要匹配\r\n    } else if (score \u003e= 5) {\r\n      starCount = 2; // 较低匹配度：摘要匹配\r\n    } else {\r\n      starCount = 1; // 低匹配度：仅内容匹配\r\n    }\r\n\r\n    // 生成星星字符串\r\n    return \"★\".repeat(starCount);\r\n  }\r\n\r\n  // 创建结果元素\r\n  function createResultElement(result, query, index) {\r\n    const div = document.createElement(\"div\");\r\n    div.className =\r\n      \"search-result-item p-4 cursor-pointer rounded-lg transition-all duration-200 ease-out hover:bg-primary/10 hover:text-primary\";\r\n    div.dataset.url = result.url;\r\n    div.dataset.index = index;\r\n\r\n    // 使用改进的高亮算法\r\n    const keywords = result.keywords || parseKeywords(query);\r\n\r\n    // 高亮标题\r\n    const highlightedTitle = highlightText(result.title, keywords);\r\n\r\n    // 高亮摘要，限制长度\r\n    const highlightedSummary = findAndHighlight(\r\n      result.summary || result.content,\r\n      keywords,\r\n      120,\r\n    );\r\n\r\n    // 生成星星评级显示\r\n    const starRating = generateStarRating(result.score);\r\n\r\n    div.innerHTML = `\r\n      \u003cdiv class=\"flex flex-col gap-2\"\u003e\r\n        \u003ch3 class=\"text-base font-semibold text-foreground line-clamp-1\"\u003e\r\n          ${highlightedTitle}\r\n        \u003c/h3\u003e\r\n        \u003cp class=\"text-sm text-muted-foreground line-clamp-2\"\u003e\r\n          ${highlightedSummary}\r\n        \u003c/p\u003e\r\n        \u003cdiv class=\"flex items-center gap-2 text-xs text-muted-foreground\"\u003e\r\n          \u003cspan\u003e${result.date}\u003c/span\u003e\r\n          ${\r\n            result.categories \u0026\u0026 result.categories.length \u003e 0\r\n              ? `\u003cspan\u003e•\u003c/span\u003e\u003cspan\u003e${result.categories[0]}\u003c/span\u003e`\r\n              : \"\"\r\n          }\r\n          ${starRating ? `\u003cspan style=\"color: #f59e0b;\"\u003e${starRating}\u003c/span\u003e` : \"\"}\r\n        \u003c/div\u003e\r\n      \u003c/div\u003e\r\n    `;\r\n\r\n    return div;\r\n  }\r\n\r\n  // 合并重叠的范围 - 基于 insight.js\r\n  function merge(ranges) {\r\n    let last;\r\n    const result = [];\r\n\r\n    ranges.forEach((r) =\u003e {\r\n      if (!last || r[0] \u003e last[1]) {\r\n        result.push((last = r));\r\n      } else if (r[1] \u003e last[1]) {\r\n        last[1] = r[1];\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  // 查找并高亮文本 - 基于 insight.js\r\n  function findAndHighlight(text, matches, maxlen) {\r\n    if (!Array.isArray(matches) || !matches.length || !text) {\r\n      return maxlen ? text.slice(0, maxlen) : text;\r\n    }\r\n\r\n    const testText = text.toLowerCase();\r\n    const indices = matches\r\n      .map((match) =\u003e {\r\n        const index = testText.indexOf(match.toLowerCase());\r\n        if (!match || index === -1) {\r\n          return null;\r\n        }\r\n        return [index, index + match.length];\r\n      })\r\n      .filter((match) =\u003e {\r\n        return match !== null;\r\n      })\r\n      .sort((a, b) =\u003e {\r\n        return a[0] - b[0] || a[1] - b[1];\r\n      });\r\n\r\n    if (!indices.length) {\r\n      return text;\r\n    }\r\n\r\n    let result = \"\";\r\n    let last = 0;\r\n    const ranges = merge(indices);\r\n    const sumRange = [ranges[0][0], ranges[ranges.length - 1][1]];\r\n\r\n    if (maxlen \u0026\u0026 maxlen \u003c sumRange[1]) {\r\n      last = sumRange[0];\r\n    }\r\n\r\n    for (let i = 0; i \u003c ranges.length; i++) {\r\n      const range = ranges[i];\r\n      result += text.slice(last, Math.min(range[0], sumRange[0] + maxlen));\r\n      if (maxlen \u0026\u0026 range[0] \u003e= sumRange[0] + maxlen) {\r\n        break;\r\n      }\r\n      result +=\r\n        '\u003cmark class=\"bg-primary/20 text-primary px-1 rounded font-medium\"\u003e' +\r\n        text.slice(range[0], range[1]) +\r\n        \"\u003c/mark\u003e\";\r\n      last = range[1];\r\n      if (i === ranges.length - 1) {\r\n        if (maxlen) {\r\n          result += text.slice(\r\n            range[1],\r\n            Math.min(text.length, sumRange[0] + maxlen + 1),\r\n          );\r\n        } else {\r\n          result += text.slice(range[1]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  // 高亮文本 - 使用改进的算法\r\n  function highlightText(text, keywords) {\r\n    if (!text || !keywords || !Array.isArray(keywords)) return text;\r\n    return findAndHighlight(text, keywords);\r\n  }\r\n\r\n  // 导航搜索结果 - 修复导航逻辑\r\n  function navigateResults(direction) {\r\n    // 检查是否有搜索结果\r\n    if (!currentResults || currentResults.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // 确保 searchItems 存在\r\n    if (!searchItems) {\r\n      return;\r\n    }\r\n\r\n    // 移除之前的选中状态\r\n    const prevSelected = searchItems.querySelector(\".search-result-selected\");\r\n    if (prevSelected) {\r\n      prevSelected.classList.remove(\"search-result-selected\");\r\n    }\r\n\r\n    // 计算新的索引\r\n    if (selectedIndex === -1) {\r\n      // 首次导航\r\n      selectedIndex = direction \u003e 0 ? 0 : currentResults.length - 1;\r\n    } else {\r\n      selectedIndex += direction;\r\n      // 循环导航\r\n      if (selectedIndex \u003c 0) {\r\n        selectedIndex = currentResults.length - 1;\r\n      } else if (selectedIndex \u003e= currentResults.length) {\r\n        selectedIndex = 0;\r\n      }\r\n    }\r\n\r\n    // 添加新的选中状态\r\n    const newSelected = searchItems.querySelector(\r\n      `[data-index=\"${selectedIndex}\"]`,\r\n    );\r\n    if (newSelected) {\r\n      newSelected.classList.add(\"search-result-selected\");\r\n      // 滚动到可见区域\r\n      newSelected.scrollIntoView({\r\n        block: \"nearest\",\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  }\r\n\r\n  // 选择结果\r\n  function selectResult() {\r\n    if (selectedIndex \u003e= 0 \u0026\u0026 selectedIndex \u003c currentResults.length) {\r\n      const result = currentResults[selectedIndex];\r\n      if (result.url) {\r\n        window.location.href = result.url;\r\n      }\r\n    }\r\n  }\r\n\r\n  // 切换搜索显示状态\r\n  function toggleSearch() {\r\n    if (isModalVisible) {\r\n      hideSearch();\r\n    } else {\r\n      showSearch();\r\n    }\r\n  }\r\n\r\n  // 暴露全局方法\r\n  window.Search = {\r\n    show: showSearch,\r\n    hide: hideSearch,\r\n    toggle: toggleSearch,\r\n    isVisible: () =\u003e isModalVisible,\r\n  };\r\n\r\n  // 页面加载完成后初始化\r\n  if (document.readyState === \"loading\") {\r\n    document.addEventListener(\"DOMContentLoaded\", init);\r\n  } else {\r\n    init();\r\n  }\r\n})();\r\n"],"mappings":"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","names":[]}